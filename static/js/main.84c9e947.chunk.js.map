{"version":3,"sources":["api/api.ts","redux/dialogs-reducer.ts","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Users/Users.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","utils/helpers/objectHelpers.tsx","redux/users-reducer.ts","components/common/pagination/Pagination.tsx","assets/images/user.png","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","assets/images/Logo_header.png","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/store.ts","hoc/withSuspense.tsx","App.tsx","index.tsx","assets/images/preloader.svg","components/common/Preloader/Preloader.tsx","components/common/formsControls/FormsControls.module.css","components/common/formsControls/FormsControls.tsx","components/common/pagination/Pagination.module.css","utils/validators/validators.tsx","App.module.css","components/Header/Header.module.css","redux/profile-reducer.ts"],"names":["ResponseStatuses","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","followUsers","userId","post","unfollowUsers","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","authMe","login","email","password","rememberMe","captcha","logout","initialState","dialogsData","id","v1","name","messagesData","messageContent","dialogsReducer","state","action","type","newMessageText","filter","m","messageId","addMessage","module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","News","news","Music","music","Settings","settings","updateObjectInArray","items","itemId","newObjProps","map","u","followed","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","value","toggleIsFollowingProgress","inProgress","_followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","success","Pagination","props","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","useState","portionNumber","setPortionNumber","portionCount","leftPortionPageNumber","rightPortionPageNumber","pagination","onClick","p","selectedPage","pageNumber","e","User","user","follow","unfollow","src","photos","small","userPhoto","alt","disabled","some","Users","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","Component","compose","connect","bind","page","res","totalCount","Header","isAuth","header","LogoForHeader","loginBlock","setAuthUserData","payload","getAuthUserData","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","component","Input","validate","requiredField","formSummaryError","messages","length","stopSubmit","_error","children","formData","initialized","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","fallback","ProfileContainer","React","lazy","DialogsContainer","default","App","initializeApp","appWrapper","appWrapperContent","exact","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","StrictMode","ReactDOM","document","getElementById","preloader","FormControl","meta","touched","hasError","formControl","Textarea","input","restProps","maxLengthCreator","maxLength","postsData","message","likesCount","profile","newPostText","postId","addPost","setStatus","getUserProfile","getUserStatus","updateUserStatus"],"mappings":"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","file":"static/js/main.84c9e947.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {ProfileType} from '../redux/profile-reducer';\r\nimport {UsersType} from '../redux/users-reducer';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'a53e0f65-c3ac-4834-99fc-a88db669947f',\r\n    },\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get<GetUsersType>(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    followUsers(userId: string) {\r\n        return instance.post<CommonResponseType>(`follow/${userId}`)\r\n    },\r\n    unfollowUsers(userId: string) {\r\n        return instance.delete<CommonResponseType>(`follow/${userId}`)\r\n    },\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get<string>(`/profile/status/${userId}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<CommonResponseType>(`/profile/status`, {status})\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<CommonResponseType<GetAuthUserData>>(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: boolean) {\r\n        return instance.post<CommonResponseType<{ userId: string }>>(`/auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete<CommonResponseType>(`/auth/login`)\r\n    },\r\n}\r\n\r\n//types\r\nexport enum ResponseStatuses {\r\n    success = 0,\r\n    error = 1,\r\n    captcha = 10,\r\n}\r\n\r\ntype GetUsersType = {\r\n    items: UsersType[]\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\nexport type CommonResponseType<T = {}> = {\r\n    resultCode: number\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    data: T\r\n}\r\n\r\ntype GetAuthUserData = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n","import {v1} from 'uuid';\r\n\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: v1(), name: 'Marta'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Vera'},\r\n        {id: v1(), name: 'Anton'},\r\n        {id: v1(), name: 'Vanya'},\r\n    ] as Array<DialogItemType>,\r\n    messagesData: [\r\n        {id: v1(), messageContent: 'Hello'},\r\n        {id: v1(), messageContent: 'How are you?'},\r\n        {id: v1(), messageContent: 'Yo'},\r\n    ] as Array<MessageItemType>,\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: DialogsActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'dialogsPage/ADD-MESSAGE':\r\n            return {\r\n                ...state,\r\n                messagesData: [\r\n                    ...state.messagesData,\r\n                    {id: v1(), messageContent: action.newMessageText}\r\n                ],\r\n            }\r\n        case 'dialogsPage/REMOVE-MESSAGE':\r\n            return {\r\n                ...state,\r\n                messagesData: [\r\n                    ...state.messagesData.filter(m => m.id !== action.messageId)\r\n                ],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const addMessage = (newMessageText: string) =>\r\n    ({type: 'dialogsPage/ADD-MESSAGE', newMessageText} as const)\r\n\r\nexport const removeMessage = (messageId: string) =>\r\n    ({type: 'dialogsPage/REMOVE-MESSAGE', messageId} as const)\r\n\r\n\r\n//types\r\nexport type MessageItemType = {\r\n    id?: string\r\n    messageContent: string\r\n}\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport type AddMessageActionType = ReturnType<typeof addMessage>\r\nexport type RemoveMessageActionType = ReturnType<typeof removeMessage>\r\nexport type DialogsActionsType =\r\n    | AddMessageActionType\r\n    | RemoveMessageActionType","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__1E9ra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__P7Nrm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__hPAd8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__Sr8R7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__6-fH1\",\"item\":\"Navbar_item__3Ldnh\",\"activeLink\":\"Navbar_activeLink__uFs2O\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, {FC} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Navbar.module.css'\r\n\r\nexport const Navbar:FC = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, {FC} from 'react';\r\nimport s from './News.module.css'\r\n\r\n\r\nexport const News: FC = () => {\r\n    return (\r\n        <div className={s.news}>\r\n            News\r\n        </div>\r\n    )\r\n}","import React, {FC} from 'react';\r\nimport s from './Music.module.css'\r\n\r\n\r\nexport const Music: FC = () => {\r\n    return (\r\n        <div className={s.music}>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React, {FC} from 'react';\r\nimport s from './Settings.module.css'\r\n\r\n\r\nexport const Settings: FC = () => {\r\n    return (\r\n        <div className={s.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import {UsersType} from '../../redux/users-reducer';\r\n\r\nexport const updateObjectInArray = (items: Array<UsersType>, itemId: string,  newObjProps: boolean) => {\r\n    return items.map(u => u.id === itemId ? {...u, followed: newObjProps} : u)\r\n}","import {ResponseStatuses, usersAPI} from '../api/api';\r\nimport {AppThunkType} from './store';\r\nimport {Dispatch} from 'redux';\r\nimport {updateObjectInArray} from '../utils/helpers/objectHelpers';\r\n\r\n\r\nconst initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as string[],\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nexport const usersReducer = (state: InitialStateType = initialState, action: UsersActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'usersPage/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, true)\r\n                // users: state.users.map(u => u.id === action.userId ? {...u, followed: true} : u)\r\n            }\r\n        case 'usersPage/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, false)\r\n                // users: state.users.map(u => u.id === action.userId ? {...u, followed: false} : u)\r\n            }\r\n        case 'usersPage/SET-USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'usersPage/SET-CURRENT-PAGE':\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case 'usersPage/SET-TOTAL-USERS-COUNT':\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        case 'usersPage/TOGGLE-IS-FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.value\r\n            }\r\n        case 'usersPage/TOGGLE-IS-FOLLOWING-PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingInProgress:\r\n                    action.inProgress\r\n                        ? [...state.followingInProgress, action.userId]\r\n                        : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const followSuccess = (userId: string) =>\r\n    ({type: 'usersPage/FOLLOW', userId} as const)\r\n\r\nexport const unfollowSuccess = (userId: string) =>\r\n    ({type: 'usersPage/UNFOLLOW', userId} as const)\r\n\r\nexport const setUsers = (users: Array<UsersType>) =>\r\n    ({type: 'usersPage/SET-USERS', users} as const)\r\n\r\nexport const setCurrentPage = (currentPage: number) =>\r\n    ({type: 'usersPage/SET-CURRENT-PAGE', currentPage} as const)\r\n\r\nexport const setTotalUsersCount = (totalCount: number) =>\r\n    ({type: 'usersPage/SET-TOTAL-USERS-COUNT', totalCount} as const)\r\n\r\nexport const toggleIsFetching = (value: boolean) =>\r\n    ({type: 'usersPage/TOGGLE-IS-FETCHING', value} as const)\r\n\r\nexport const toggleIsFollowingProgress = (inProgress: boolean, userId: string) =>\r\n    ({type: 'usersPage/TOGGLE-IS-FOLLOWING-PROGRESS', inProgress, userId} as const)\r\n\r\n\r\n//thunks\r\nexport const requestUsers = (page: number, pageSize: number): AppThunkType =>\r\n    async dispatch => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n        const res = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(res.data.items))\r\n        dispatch(setTotalUsersCount(res.data.totalCount))\r\n    }\r\n\r\nconst _followUnfollowFlow = async (dispatch: Dispatch<UsersActionsType>, userId: string, apiMethod: any, actionCreator: (userId: string) => FollowSuccessActionType | UnfollowSuccessActionType) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n    const res = await apiMethod(userId)\r\n    if (res.data.resultCode === ResponseStatuses.success) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: string): AppThunkType =>\r\n    async dispatch => {\r\n        const apiMethod = usersAPI.followUsers.bind(usersAPI)\r\n        _followUnfollowFlow(dispatch, userId, apiMethod, followSuccess)\r\n    }\r\n\r\nexport const unfollow = (userId: string): AppThunkType =>\r\n    async dispatch => {\r\n        const apiMethod = usersAPI.unfollowUsers.bind(usersAPI)\r\n        _followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess)\r\n    }\r\n\r\n//types\r\nexport type UsersType = {\r\n    id: string\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    uniqueUrlName: string | null\r\n    location?: {\r\n        city: string\r\n        country: string\r\n    }\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\nexport type FollowSuccessActionType = ReturnType<typeof followSuccess>\r\nexport type UnfollowSuccessActionType = ReturnType<typeof unfollowSuccess>\r\nexport type SetUsersActionType = ReturnType<typeof setUsers>\r\nexport type SetCurrentPageActionType = ReturnType<typeof setCurrentPage>\r\nexport type SetTotalUsersCountActionType = ReturnType<typeof setTotalUsersCount>\r\nexport type ToggleIsFetchingActionType = ReturnType<typeof toggleIsFetching>\r\nexport type ToggleIsFollowingProgressActionType = ReturnType<typeof toggleIsFollowingProgress>\r\n\r\nexport type UsersActionsType =\r\n    | FollowSuccessActionType\r\n    | UnfollowSuccessActionType\r\n    | SetUsersActionType\r\n    | SetCurrentPageActionType\r\n    | SetTotalUsersCountActionType\r\n    | ToggleIsFetchingActionType\r\n    | ToggleIsFollowingProgressActionType","import React, {FC, useState} from 'react';\r\nimport s from './Pagination.module.css';\r\n\r\n\r\nexport const Pagination: FC<UsersPropsType> = (props) => {\r\n\r\n    const {totalItemsCount, currentPage, pageSize, onPageChanged, portionSize} = props\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={s.pagination}>\r\n            {\r\n                portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}>PREV</button>\r\n            }\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => {\r\n                    return (\r\n                        <span key={p} className={currentPage === p ? s.selectedPage : s.pageNumber}\r\n                              onClick={e => onPageChanged(p)}>\r\n                                {p}\r\n                            </span>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                portionCount > portionNumber && <button onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n//types\r\ntype UsersPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize: number\r\n}","export default __webpack_public_path__ + \"static/media/user.4409fc97.png\";","import React, {FC} from 'react';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport s from './Users.module.css';\r\nimport {UsersType} from '../../redux/users-reducer';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nexport const User: FC<UserPropsType> = (props) => {\r\n\r\n    const {user, followingInProgress, follow, unfollow} = props\r\n\r\n    const onClickFollow = () => follow(user.id)\r\n    const onClickUnFollow = () => unfollow(user.id)\r\n\r\n    return (\r\n        <>\r\n            <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}>\r\n                                <img src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                                     className={s.userPhoto} alt={''}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                user.followed\r\n                                    ?\r\n                                    <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                            onClick={onClickUnFollow}>unFollow</button>\r\n                                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                              onClick={onClickFollow}>follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                        <div>\r\n                            {user.name}\r\n                        </div>\r\n                        <div>\r\n                            {user.status}\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                            <div>{'u.location.country'}</div>\r\n                            <div>{'u.location.city'}</div>\r\n                    </span>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//types\r\ntype UserPropsType = {\r\n    user: UsersType\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    followingInProgress: string[]\r\n}","import React, {FC} from 'react';\r\nimport {UsersType} from '../../redux/users-reducer';\r\nimport {Pagination} from '../common/pagination/Pagination';\r\nimport {User} from './User';\r\n\r\n\r\nexport const Users: FC<UsersPropsType> = (props) => {\r\n\r\n    const {totalUsersCount, users, currentPage, pageSize, followingInProgress, follow, onPageChanged, unfollow} = props\r\n\r\n    return (\r\n        <div>\r\n            <Pagination currentPage={currentPage}\r\n                        onPageChanged={onPageChanged}\r\n                        pageSize={pageSize}\r\n                        totalItemsCount={totalUsersCount}\r\n                        portionSize={10}/>\r\n    <div>\r\n        {\r\n            users.map(user => <User key={user.id}\r\n                                    user={user}\r\n                                    followingInProgress={followingInProgress}\r\n                                    follow={follow}\r\n                                    unfollow={unfollow}/>)\r\n        }\r\n    </div>\r\n</div>\r\n)\r\n}\r\n\r\n\r\n//types\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UsersType>\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    followingInProgress: string[]\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: string) => void\r\n}","import {AppStateType} from './store';\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleIsFollowingProgress,\r\n    unfollow,\r\n    UsersType\r\n} from '../../redux/users-reducer';\r\nimport {AppStateType} from '../../redux/store';\r\nimport React, {Component, ComponentType} from 'react';\r\nimport {Users} from './Users';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from '../../redux/users-selectors';\r\n\r\n\r\nclass UsersContainer extends Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        const {requestUsers, currentPage, pageSize} = this.props\r\n        requestUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {requestUsers, pageSize} = this.props\r\n        requestUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n                toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleIsFollowingProgress,\r\n        requestUsers,\r\n    }),\r\n    //withAuthRedirect\r\n)(UsersContainer)\r\n\r\n\r\n//types\r\ntype MapStateToPropsType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\ntype MapDispatchToPropsType = {\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: string) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n}\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n","export default __webpack_public_path__ + \"static/media/Logo_header.8aaf41b6.png\";","import React, {FC} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css'\r\nimport LogoForHeader from '../../assets/images/Logo_header.png';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nexport const Header: FC<PropsType> = ({isAuth, login, logout}) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src={LogoForHeader} alt={''}/>\r\n            <div className={s.loginBlock}>\r\n                {isAuth\r\n                    ? <div>{login} <button onClick={logout}>Log out</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}","import {authAPI, ResponseStatuses} from '../api/api';\r\nimport {AppThunkType} from './store';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\n\r\nconst initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    captcha: false,\r\n    isAuth: false,\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'auth/SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, captcha: boolean, isAuth: boolean) =>\r\n    ({type: 'auth/SET-USER-DATA', payload: {userId, email, login, captcha, isAuth}} as const)\r\n\r\n\r\n//thunks\r\nexport const getAuthUserData = (): AppThunkType => async dispatch => {\r\n    const res = await authAPI.authMe()\r\n    if (res.data.resultCode === ResponseStatuses.success) {\r\n        let {id, email, login} = res.data.data\r\n        dispatch(setAuthUserData(id, email, login, true, true))\r\n    }\r\n    return res\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: boolean): AppThunkType => async dispatch => {\r\n    const res = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (res.data.resultCode === ResponseStatuses.success) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (res.data.messages.length) {\r\n            dispatch(stopSubmit('login', {_error: res.data.messages[0]}))\r\n        } else {\r\n            dispatch(stopSubmit('login', {_error: 'Some error'}))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = (): AppThunkType => async dispatch => {\r\n    const res = await authAPI.logout()\r\n    if (res.data.resultCode === ResponseStatuses.success) {\r\n        dispatch(setAuthUserData(null, null, null, false, false))\r\n    }\r\n}\r\n\r\n\r\n//types\r\nexport type SetAuthUserDataActionType = ReturnType<typeof setAuthUserData>\r\nexport type AuthActionsType = SetAuthUserDataActionType","import React, {Component} from 'react'\r\nimport {Header} from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/store';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype MapDispatchToPropsType = {\r\n    logout: () => void\r\n}\r\nexport type HeaderPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\n\r\nclass HeaderContainer extends Component<HeaderPropsType> {\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","import React, {FC} from 'react'\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {Input} from '../common/formsControls/FormsControls';\r\nimport {requiredField} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {AppStateType} from '../../redux/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport s from '../common/formsControls/FormsControls.module.css'\r\n\r\n\r\nconst Login: FC<MapStateToPropsType & MapDispatchToPropsType> = props => {\r\n\r\n    const {login, isAuth, captcha, children} = props\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst LoginForm: FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Email'}\r\n                    name={'email'}\r\n                    component={Input}\r\n                    validate={[requiredField]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Password'}\r\n                    name={'password'}\r\n                    component={Input}\r\n                    validate={[requiredField]}\r\n                    type={'password'}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    type=\"checkbox\"\r\n                    name=\"rememberMe\"\r\n                    component={Input}\r\n                /> remember me\r\n            </div>\r\n            {error && <div className={s.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\n\r\nconst MapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    captcha: state.auth.captcha,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\n//types\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: boolean\r\n}\r\ntype MapStateToPropsType = {\r\n    captcha: boolean | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: boolean) => void\r\n}\r\n\r\n\r\nexport default connect(MapStateToProps, {login})(Login)","import {AppThunkType} from './store';\r\nimport {getAuthUserData} from './auth-reducer';\r\n\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: InitializedAppActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'app/INITIALIZED-SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const initializedSuccess = () => ({type: 'app/INITIALIZED-SUCCESS'} as const)\r\n\r\n\r\n//thunks\r\nexport const initializeApp = (): AppThunkType => async dispatch => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n\r\n\r\n//types\r\nexport type InitializedSuccessActionType = ReturnType<typeof initializedSuccess>\r\nexport type InitializedAppActionsType = InitializedSuccessActionType","export type SidebarActionsType = ReturnType<any>\r\n\r\n\r\nconst initialState = {}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nexport const sidebarReducer = (state: InitialStateType = initialState, action: SidebarActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'sidebar/':\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {applyMiddleware, combineReducers, createStore, compose} from 'redux';\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport {ProfileActionsType, profileReducer} from './profile-reducer';\r\nimport {DialogsActionsType, dialogsReducer} from './dialogs-reducer';\r\nimport {SidebarActionsType, sidebarReducer} from './sidebar-reducer';\r\nimport {UsersActionsType, usersReducer} from './users-reducer';\r\nimport {AuthActionsType, authReducer} from './auth-reducer';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {appReducer, InitializedAppActionsType} from './app-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport type AppActionsType =\r\n    | AuthActionsType\r\n    | DialogsActionsType\r\n    | ProfileActionsType\r\n    | SidebarActionsType\r\n    | UsersActionsType\r\n    | InitializedAppActionsType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppStateType,\r\n    unknown,\r\n    AppActionsType>\r\n\r\n//@ts-ignore\r\nwindow.__store__ = store\r\n","import React, {Suspense} from 'react'\r\nimport {Preloader} from '../components/common/Preloader/Preloader';\r\n\r\n\r\nexport const withSuspense = (Component: JSX.Element) => {\r\n\r\n    return <Suspense fallback={<Preloader/>}>\r\n        {Component}\r\n    </Suspense>\r\n}","import React, {Component, ComponentType} from 'react'\r\nimport s from './App.module.css'\r\nimport {Navbar} from './components/Navbar/Navbar'\r\nimport {News} from './components/News/News';\r\nimport {Music} from './components/Music/Music';\r\nimport {Settings} from './components/Settings/Settings';\r\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom'\r\n// import {DialogsContainer} from './components/Dialogs/DialogsContainer';\r\n// import ProfileContainer from './components/Profile/ProfileContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport {connect, Provider} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeApp} from './redux/app-reducer';\r\nimport {AppStateType, store} from './redux/store';\r\nimport {Preloader} from './components/common/Preloader/Preloader';\r\nimport {withSuspense} from './hoc/withSuspense';\r\n\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer')\r\n    .then(({ DialogsContainer }) => ({ default: DialogsContainer })),\r\n);\r\n\r\n\r\nclass App extends Component<AppPropsType> {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className={s.appWrapper}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={s.appWrapperContent}>\r\n                    <Route exact path=\"/profile/:userId?\" render={() => withSuspense(<ProfileContainer/>)}/>\r\n                    <Route exact path=\"/dialogs\" render={() => withSuspense(<DialogsContainer/>)}/>\r\n                    <Route exact path=\"/users\" render={() => withSuspense(<UsersContainer/>)}/>\r\n                    <Route exact path=\"/news\" render={() => <News/>}/>\r\n                    <Route exact path=\"/music\" render={() => <Music/>}/>\r\n                    <Route exact path=\"/settings\" render={() => <Settings/>}/>\r\n                    <Route exact path=\"/login\" render={() => <Login/>}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    initialized: state.app.initialized,\r\n})\r\n\r\n//types\r\ntype MapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    initializeApp: () => void\r\n}\r\nexport type AppPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nconst AppContainer = compose<ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App)\r\n\r\n\r\nexport const SamuraiJSApp = () => {\r\n    return <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport {SamuraiJSApp} from './App';\r\n\r\nReactDOM.render(<SamuraiJSApp />,\r\n    document.getElementById('root')\r\n)\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","export default __webpack_public_path__ + \"static/media/preloader.5665744c.svg\";","import React, {FC} from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\n\r\nexport const Preloader: FC = () => {\r\n    return <>\r\n        <img src={preloader} alt={''}/>\r\n    </>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2Z8L4\",\"error\":\"FormsControls_error__BtpDs\",\"formSummaryError\":\"FormsControls_formSummaryError__2qS17\"};","import React, {FC} from 'react'\r\nimport {WrappedFieldProps} from 'redux-form/lib/Field';\r\nimport s from './FormsControls.module.css'\r\n\r\n\r\nconst FormControl: FC<WrappedFieldProps> = props => {\r\n    const {meta: {touched, error}, children} = props\r\n    const hasError = touched && error\r\n\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError && s.error)}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea: FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input: FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Pagination_selectedPage__2L2RV\",\"pagination\":\"Pagination_pagination__2St_3\",\"pageNumber\":\"Pagination_pageNumber__3_VVs\"};","export const requiredField = (value: string) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1upY6\",\"appWrapperContent\":\"App_appWrapperContent__1w-fS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__tmv2U\",\"loginBlock\":\"Header_loginBlock__1H5dx\"};","import {v1} from 'uuid';\r\nimport {AppThunkType} from './store';\r\nimport {profileAPI} from '../api/api';\r\n\r\n\r\nconst initialState = {\r\n    postsData: [\r\n        {id: v1(), message: 'Hello', likesCount: 11},\r\n        {id: v1(), message: 'Buy', likesCount: 15},\r\n        {id: v1(), message: 'How are you?', likesCount: 7},\r\n        {id: v1(), message: 'I am fine, and you?', likesCount: 5},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'profilePage/ADD-POST':\r\n            return {\r\n                ...state,\r\n                postsData: [\r\n                    ...state.postsData,\r\n                    {id: v1(), message: action.newPostText, likesCount: 0}\r\n                ],\r\n            }\r\n        case 'profilePage/SET-USER-PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case 'profilePage/SET-STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case 'profilePage/REMOVE-POST':\r\n            return {\r\n                ...state,\r\n                postsData: [\r\n                    ...state.postsData.filter(p => p.id !== action.postId)\r\n                ],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const addPost = (newPostText: string) =>\r\n    ({type: 'profilePage/ADD-POST', newPostText} as const)\r\n\r\nexport const setUserProfile = (profile: ProfileType | null) =>\r\n    ({type: 'profilePage/SET-USER-PROFILE', profile} as const)\r\n\r\nexport const setStatus = (status: string) =>\r\n    ({type: 'profilePage/SET-STATUS', status} as const)\r\n\r\nexport const removePost = (postId: string) =>\r\n    ({type: 'profilePage/REMOVE-POST', postId} as const)\r\n\r\n\r\n//thunks\r\nexport const getUserProfile = (userId: string): AppThunkType =>\r\n    async dispatch => {\r\n        const res = await profileAPI.getProfile(userId)\r\n        dispatch(setUserProfile(res.data))\r\n    }\r\n\r\nexport const getUserStatus = (userId: string): AppThunkType =>\r\n    async dispatch => {\r\n        const res = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(res.data))\r\n    }\r\n\r\nexport const updateUserStatus = (status: string): AppThunkType =>\r\n    async dispatch => {\r\n        const res = await profileAPI.updateStatus(status)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    }\r\n\r\n\r\n//types\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    contacts: {\r\n        facebook: string\r\n        website: string\r\n        vk: string\r\n        twitter: string\r\n        instagram: string\r\n        youtube: string\r\n        github: string\r\n        mainLink: string\r\n    }\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type AddPostActionType = ReturnType<typeof addPost>\r\nexport type SetUserProfileActionType = ReturnType<typeof setUserProfile>\r\nexport type SetStatusActionType = ReturnType<typeof setStatus>\r\nexport type RemovePostActionType = ReturnType<typeof removePost>\r\n\r\nexport type ProfileActionsType =\r\n    | AddPostActionType\r\n    | SetUserProfileActionType\r\n    | SetStatusActionType\r\n    | RemovePostActionType"],"sourceRoot":""}