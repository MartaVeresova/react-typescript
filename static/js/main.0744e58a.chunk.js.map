{"version":3,"sources":["components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Dialogs/Message/Message.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.ts","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","utils/validators/validators.tsx","components/common/formsControls/FormsControls.tsx","components/Dialogs/Message/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","api/api.ts","components/Dialogs/DialogsContainer.tsx","redux/users-reducer.ts","assets/images/user.png","components/Users/Users.tsx","assets/images/preloader.svg","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/AddPostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","assets/images/Logo_header.png","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","redux/sidebar-reducer.ts","redux/redux-store.ts","index.tsx","components/Dialogs/Dialogs.module.css","components/common/formsControls/FormsControls.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","App.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","News","news","Music","music","Settings","settings","initialState","dialogsData","id","v1","name","messagesData","messageContent","dialogsReducer","state","action","type","newMessageText","Message","props","message","DialogItem","path","src","alt","requiredField","value","maxLengthCreator","maxLength","length","FormControl","input","meta","children","hasError","touched","error","formControl","Textarea","restProps","Input","maxLength50","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","textarea","placeholder","component","validate","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","ResponseStatuses","DialogsContainer","compose","stateDialogsPage","dialogsPage","addMessage","dialogsElements","map","d","messagesElements","m","dialogs","dialogsItem","messagesItem","formData","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","res","data","userId","post","delete","profileAPI","status","put","authAPI","email","password","rememberMe","captcha","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleIsFollowingProgress","usersReducer","u","followed","totalCount","filter","Users","pagesCount","Math","ceil","pages","i","push","p","selectedPage","onClick","e","onPageChanged","photos","small","userPhoto","disabled","some","unfollow","follow","Preloader","preloader","UsersContainer","pageNumber","getUsers","this","React","usersPage","dispatch","a","resultCode","success","setCurrentPage","items","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","updateUserStatus","onStatusChange","currentTarget","prevProps","prevState","onDoubleClick","onBlur","autoFocus","onChange","ProfileInfo","profile","profileInfo","descriptionBlock","large","postsData","likesCount","setStatus","profileReducer","newPostText","Post","maxLength10","AddPostReduxForm","button","MyPostsContainer","profilePage","addPost","postsElements","myPosts","Profile","ProfileContainer","match","params","JSON","stringify","authorizedUserId","getUserProfile","getUserStatus","withRouter","Header","header","LogoForHeader","loginBlock","login","logout","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","formSummaryError","messages","stopSubmit","_error","App","appWrapper","appWrapperContent","exact","render","sidebarReducer","rootReducer","combineReducers","sidebar","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,oBCA1BD,EAAOC,QAAU,CAAC,SAAW,6B,oBCA7BD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,kFCatEC,G,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,kECLP,SAASQ,IACZ,OACI,sBAAKC,UAAWC,IAAEC,IAAlB,UACI,qBAAKF,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,WAA1C,uBAEJ,qBAAKN,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEM,QAA/B,SACI,cAAC,IAAD,CAASH,GAAG,WAAWC,gBAAiBJ,IAAEK,WAA1C,wBAEJ,qBAAKN,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEM,QAA/B,SACI,cAAC,IAAD,CAASH,GAAG,SAASC,gBAAiBJ,IAAEK,WAAxC,qBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,QAAQC,gBAAiBJ,IAAEK,WAAvC,oBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,WAAxC,qBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBJ,IAAEK,WAA3C,2B,sBCnBT,SAASE,IACZ,OACI,qBAAKR,UAAWC,IAAEQ,KAAlB,kB,sBCFD,SAASC,IACZ,OACI,qBAAKV,UAAWC,IAAEU,MAAlB,mB,sBCFD,SAASC,IACZ,OACI,qBAAKZ,UAAWC,IAAEY,SAAlB,sB,oCCEFC,EAAe,CACjBC,YAAa,CACT,CAACC,GAAIC,cAAMC,KAAM,SACjB,CAACF,GAAIC,cAAMC,KAAM,SACjB,CAACF,GAAIC,cAAMC,KAAM,QACjB,CAACF,GAAIC,cAAMC,KAAM,SACjB,CAACF,GAAIC,cAAMC,KAAM,UAErBC,aAAc,CACV,CAACH,GAAIC,cAAMG,eAAgB,SAC3B,CAACJ,GAAIC,cAAMG,eAAgB,gBAC3B,CAACJ,GAAIC,cAAMG,eAAgB,QA0CpBC,EApCQ,WAA2F,IAA1FC,EAAyF,uDAA/DR,EAAcS,EAAiD,uCAE7G,OAAQA,EAAOC,MACX,IAAK,cACD,OAAO,2BACAF,GADP,IAEIH,aAAa,GAAD,mBACLG,EAAMH,cADD,CAER,CAACH,GAAIC,cAAMG,eAAgBG,EAAOE,oBAG9C,QACI,OAAOH,I,mCChCZ,SAASI,EAAQC,GAEpB,OACI,qBAAK3B,UAAWC,IAAE2B,QAAlB,SAA4BD,EAAMP,iB,qBCFnC,SAASS,EAAWF,GACvB,IAAMG,EAAO,YAAcH,EAAMX,GAEjC,OACI,qBAAKhB,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEK,YAA/B,SACI,eAAC,IAAD,CAASF,GAAI0B,EAAb,UACI,qBAAKC,IAAI,4FAA4FC,IAAK,KACzGL,EAAMT,U,aCbVe,EAAgB,SAACC,GAC1B,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAuB,SAACF,GACpD,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,c,kCCDrCE,EAA2C,SAACX,GACAA,EAAvCY,MADkD,IAC3CC,EAAgCb,EAAhCa,KAAMC,EAA0Bd,EAA1Bc,SACdC,GAFkD,YACVf,EADU,6BAEvCa,EAAKG,SAAWH,EAAKI,OAEtC,OACI,sBAAK5C,UAAWC,IAAE4C,YAAc,KAAOH,GAAYzC,IAAE2C,OAArD,UACI,8BACKH,IAEJC,GAAY,+BAAOF,EAAKI,YAMxBE,EAAwC,SAACnB,GAAW,IACtDY,EAAuCZ,EAAvCY,MAA0BQ,GAAapB,EAAhCa,KAAgCb,EAA1Bc,SADwC,YACdd,EADc,8BAE5D,OAAO,cAAC,EAAD,2BAAiBA,GAAjB,aAAwB,oDAAcY,GAAWQ,QAG/CC,EAAqC,SAACrB,GAAW,IACnDY,EAAuCZ,EAAvCY,MAA0BQ,GAAapB,EAAhCa,KAAgCb,EAA1Bc,SADqC,YACXd,EADW,8BAEzD,OAAO,cAAC,EAAD,2BAAiBA,GAAjB,aAAwB,iDAAWY,GAAWQ,QClBnDE,EAAcd,EAAiB,IC8BrC,IAAMe,EAAsBC,YAAwB,CAACC,KAAM,kBAA/BD,ED3B6C,SAACxB,GACtE,OACI,uBAAM0B,SAAU1B,EAAM2B,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACIvD,UAAWC,IAAEuD,SACbC,YAAY,qBACZvC,KAAK,iBACLwC,UAAWZ,EACXa,SAAU,CAAC1B,EAAegB,OAGlC,8BACI,yD,QEhBVW,EAAkB,SAACtC,GAAD,MAA+C,CACnEuC,OAAQvC,EAAMwC,KAAKD,SAGhB,SAASE,EAAoBC,GAUhC,OADiCC,YAAQL,EAARK,EAPP,SAACtC,GAAgC,IAClDkC,EAAwBlC,EAAxBkC,OAAWd,EADsC,YACzBpB,EADyB,YAEtD,OAAKkC,EAEE,cAACG,EAAD,eAAejB,IAFF,cAAC,IAAD,CAAU3C,GAAI,c,IC+C9B8D,E,QCxCCC,GAAmBC,aAC5BH,aAPoB,SAAC3C,GACrB,MAAO,CACH+C,iBAAkB/C,EAAMgD,eAKH,CAACC,WTiBJ,SAAC9C,GAAD,MACrB,CAACD,KAAM,cAAeC,qBSjBvBsC,EAF4BK,EHfzB,SAAiBzC,GAEpB,IAAM6C,EAAkB7C,EAAM0C,iBAAiBtD,YAAY0D,KAAI,SAAAC,GAAC,OAAI,cAAC7C,EAAD,CACrDX,KAAMwD,EAAExD,KACnBF,GAAI0D,EAAE1D,IADD0D,EAAE1D,OAEL2D,EAAmBhD,EAAM0C,iBAAiBlD,aAAasD,KAAI,SAAAG,GAAC,OAAI,cAAClD,EAAD,CAElEN,eAAgBwD,EAAExD,gBADbwD,EAAE5D,OASX,OACI,sBAAKhB,UAAWC,IAAE4E,QAAlB,UACI,qBAAK7E,UAAWC,IAAE6E,YAAlB,SACKN,IAGL,sBAAKxE,UAAWC,IAAE8E,aAAlB,UACKJ,EACD,cAACzB,EAAD,CAAqBG,SAbP,SAAC2B,GACvBrD,EAAM4C,WAAWS,EAASvD,4B,2EEf5BwD,G,QAAWC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAKNC,GAAW,WACsB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOR,GAASS,IAAT,qBAAyCF,EAAzC,kBAA8DC,IAChEhG,MAAK,SAAAkG,GAAG,OAAIA,EAAIC,SAHhBL,GAAW,SAKRM,GACR,OAAOZ,GAASa,KAAT,iBAA4CD,IAC9CpG,MAAK,SAAAkG,GAAG,OAAIA,EAAIC,SAPhBL,GAAW,SASNM,GACV,OAAOZ,GAASc,OAAT,iBAA8CF,IAChDpG,MAAK,SAAAkG,GAAG,OAAIA,EAAIC,SAGhBI,GAAa,SACXH,GACP,OAAOZ,GAASS,IAAT,kBAAqCG,IACvCpG,MAAK,SAAAkG,GAAG,OAAIA,EAAIC,SAHhBI,GAAa,SAKZH,GACN,OAAOZ,GAASS,IAAT,0BAAwCG,IAC1CpG,MAAK,SAAAkG,GAAG,OAAIA,EAAIC,SAPhBI,GAAa,SASTC,GACT,OAAOhB,GAASiB,IAAT,kBAAoD,CAACD,WACvDxG,MAAK,SAAAkG,GAAG,OAAIA,EAAIC,SAIhBO,GAAU,WAEf,OAAOlB,GAASS,IAAT,WACFjG,MAAK,SAAAkG,GAAG,OAAIA,EAAIC,SAHhBO,GAAU,SAKbC,EAAeC,GAAkE,IAAhDC,EAA+C,wDAAlBC,EAAkB,uCAClF,OAAOtB,GAASa,KAAT,cAAqE,CACxEM,QACAC,WACAC,aACAC,YAEC9G,MAAK,SAAAkG,GAAG,OAAIA,EAAIC,SAZhBO,GAAU,WAef,OAAOlB,GAASc,OAAT,eACFtG,MAAK,SAAAkG,GAAG,OAAIA,EAAIC,U,SAKjB1B,O,qBAAAA,I,iBAAAA,I,uBAAAA,M,KEnDZ,IAAMpD,GAAe,CACjB0F,MAAO,GACPf,SAAU,EACVgB,gBAAiB,EACjBjB,YAAa,EACbkB,YAAY,EACZC,oBAAqB,IAoDZC,GAAgB,SAACf,GAAD,MACxB,CAACrE,KAAM,SAAUqE,WAETgB,GAAkB,SAAChB,GAAD,MAC1B,CAACrE,KAAM,WAAYqE,WAWXiB,GAAmB,SAACJ,GAAD,MAC3B,CAAClF,KAAM,qBAAsBkF,eAErBK,GAA4B,SAACL,EAAqBb,GAAtB,MACpC,CAACrE,KAAM,+BAAgCkF,aAAYb,WAqEzCmB,GAvIM,WAAyF,IAAxF1F,EAAuF,uDAA7DR,GAAcS,EAA+C,uCAEzG,OAAQA,EAAOC,MACX,IAAK,SACD,OAAO,2BACAF,GADP,IAEIkF,MAAOlF,EAAMkF,MAAM/B,KAAI,SAAAwC,GAAC,OAAIA,EAAEjG,KAAOO,EAAOsE,OAAhB,2BAA6BoB,GAA7B,IAAgCC,UAAU,IAAQD,OAEtF,IAAK,WACD,OAAO,2BACA3F,GADP,IAEIkF,MAAOlF,EAAMkF,MAAM/B,KAAI,SAAAwC,GAAC,OAAIA,EAAEjG,KAAOO,EAAOsE,OAAhB,2BAA6BoB,GAA7B,IAAgCC,UAAU,IAASD,OAEvF,IAAK,YACD,OAAO,2BACA3F,GADP,IAEIkF,MAAOjF,EAAOiF,QAEtB,IAAK,mBACD,OAAO,2BACAlF,GADP,IAEIkE,YAAajE,EAAOiE,cAE5B,IAAK,wBACD,OAAO,2BACAlE,GADP,IAEImF,gBAAiBlF,EAAO4F,aAEhC,IAAK,qBACD,OAAO,2BACA7F,GADP,IAEIoF,WAAYnF,EAAOmF,aAE3B,IAAK,+BACD,OAAO,2BACApF,GADP,IAEIqF,oBACIpF,EAAOmF,WAAP,sBACUpF,EAAMqF,qBADhB,CACqCpF,EAAOsE,SACtCvE,EAAMqF,oBAAoBS,QAAO,SAAApG,GAAE,OAAIA,IAAOO,EAAOsE,YAEvE,QACI,OAAOvE,IClEJ,OAA0B,iC,oBCkBlC,SAAS+F,GAAM1F,GAKlB,IAHA,IAAI2F,EAAaC,KAAKC,KAAK7F,EAAM8E,gBAAkB9E,EAAM8D,UAErDgC,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,OACI,gCACI,8BACKD,EAAMhD,KAAI,SAAAmD,GACP,OAAO,sBAAM5H,UAAW2B,EAAM6D,cAAgBoC,EAAI3H,KAAE4H,aAAe,GACtDC,QAAS,SAACC,GAAD,OAAOpG,EAAMqG,cAAcJ,IAD1C,SAC+CA,SAI1DjG,EAAM6E,MAAM/B,KAAI,SAAAwC,GAuBZ,OACI,gCACJ,iCACI,8BACI,cAAC,IAAD,CAAS7G,GAAI,YAAc6G,EAAEjG,GAA7B,SACI,qBAAKe,IAAwB,OAAnBkF,EAAEgB,OAAOC,MAAiBjB,EAAEgB,OAAOC,MAAQC,GAChDnI,UAAWC,KAAEkI,UAAWnG,IAAK,SAG1C,8BACKiF,EAAEC,SAEC,wBAAQkB,SAAUzG,EAAMgF,oBAAoB0B,MAAK,SAAArH,GAAE,OAAIA,IAAOiG,EAAEjG,MACxD8G,QAxBI,kBAAMnG,EAAM2G,SAASrB,EAAEjG,KAuBnC,sBAEE,wBAAQoH,SAAUzG,EAAMgF,oBAAoB0B,MAAK,SAAArH,GAAE,OAAIA,IAAOiG,EAAEjG,MACxD8G,QArCA,kBAAMnG,EAAM4G,OAAOtB,EAAEjG,KAoC7B,yBAIN,iCACJ,8BACKiG,EAAE/F,OAEP,8BACK+F,EAAEhB,YAGH,iCACA,8BAAM,uBACN,8BAAM,yBA3BAgB,EAAEjG,UC5DrB,WAA0B,sCCGlC,SAASwH,KACZ,OAAO,mCACH,qBAAKzG,IAAK0G,GAAWzG,IAAK,O,IC+B5B0G,G,+MAMFV,cAAgB,SAACW,GACb,EAAKhH,MAAMiH,SAASD,EAAY,EAAKhH,MAAM8D,W,wDAL/C,WACIoD,KAAKlH,MAAMiH,SAASC,KAAKlH,MAAM6D,YAAaqD,KAAKlH,MAAM8D,Y,oBAO3D,WACI,OAAO,qCACFoD,KAAKlH,MAAM+E,WAAa,cAAC8B,GAAD,IAAe,KACxC,cAACnB,GAAD,CACIZ,gBAAiBoC,KAAKlH,MAAM8E,gBAC5BhB,SAAUoD,KAAKlH,MAAM8D,SACrBD,YAAaqD,KAAKlH,MAAM6D,YACxBwC,cAAea,KAAKb,cACpBxB,MAAOqC,KAAKlH,MAAM6E,MAClB+B,OAAQM,KAAKlH,MAAM4G,OACnBD,SAAUO,KAAKlH,MAAM2G,SACrB3B,oBAAqBkC,KAAKlH,MAAMgF,oBAChCI,0BAA2B8B,KAAKlH,MAAMoF,mC,GAtBzB+B,IAAM9E,WAuCpBI,gBACXH,aAZoB,SAAC3C,GACrB,MAAO,CACHkF,MAAOlF,EAAMyH,UAAUvC,MACvBf,SAAUnE,EAAMyH,UAAUtD,SAC1BgB,gBAAiBnF,EAAMyH,UAAUtC,gBACjCjB,YAAalE,EAAMyH,UAAUvD,YAC7BkB,WAAYpF,EAAMyH,UAAUrC,WAC5BC,oBAAqBrF,EAAMyH,UAAUpC,uBAKhB,CACrB4B,OL0Bc,SAAC1C,GAAD,gDAClB,WAAMmD,GAAN,UAAAC,EAAA,6DACID,EAASjC,IAA0B,EAAMlB,IAD7C,SAEuBN,GAAqBM,GAF5C,cAGaqD,aAAehF,EAAiBiF,SACrCH,EAASpC,GAAcf,IAE3BmD,EAASjC,IAA0B,EAAOlB,IAN9C,2CADkB,uDKzBdyC,SLmCgB,SAACzC,GAAD,gDACpB,WAAMmD,GAAN,UAAAC,EAAA,6DACID,EAASjC,IAA0B,EAAMlB,IAD7C,SAEuBN,GAAuBM,GAF9C,cAGaqD,aAAehF,EAAiBiF,SACrCH,EAASnC,GAAgBhB,IAE7BmD,EAASjC,IAA0B,EAAOlB,IAN9C,2CADoB,uDKlChBuD,eLCsB,SAAC5D,GAAD,MACzB,CAAChE,KAAM,mBAAoBgE,gBKDxBuB,6BACA6B,SLagB,SAACpD,EAAqBC,GAAtB,gDACpB,WAAMuD,GAAN,gBAAAC,EAAA,6DACID,EAASlC,IAAiB,IAD9B,SAEuBvB,GAAkBC,EAAaC,GAFtD,OAEUG,EAFV,OAGIoD,EAASlC,IAAiB,IAC1BkC,EArBH,CAACxH,KAAM,YAAagF,MAqBCZ,EAAKyD,QACvBL,EAhBH,CAACxH,KAAM,wBAAyB2F,WAgBDvB,EAAKuB,aALrC,2CADoB,yDKXpBpD,EARWK,CASbsE,I,wCCrBaY,G,+MAtDXhI,MAAQ,CACJiI,UAAU,EACVtD,OAAQ,EAAKtE,MAAMsE,Q,EAUvBuD,iBAAmB,WACf,EAAKC,SAAS,CACVF,UAAU,K,EAGlBG,mBAAqB,WACjB,EAAKD,SAAS,CACVF,UAAU,IAEd,EAAK5H,MAAMgI,iBAAiB,EAAKrI,MAAM2E,S,EAE3C2D,eAAiB,SAAC7B,GACd,EAAK0B,SAAS,CACVxD,OAAQ8B,EAAE8B,cAAc3H,S,yDApBhC,SAAmB4H,EAAsBC,GACjCD,EAAU7D,SAAW4C,KAAKlH,MAAMsE,QAChC4C,KAAKY,SAAS,CACVxD,OAAQ4C,KAAKvH,MAAM2E,W,oBAqB/B,WACI,OACI,iCAES4C,KAAKvH,MAAMiI,UACZ,8BACI,sBAAMS,cAAenB,KAAKW,iBAA1B,SAA6CX,KAAKlH,MAAMsE,QAAU,UAItE4C,KAAKvH,MAAMiI,UACX,8BACI,uBACIU,OAAQpB,KAAKa,mBACbQ,WAAS,EACThI,MAAO2G,KAAKvH,MAAM2E,OAClBkE,SAAUtB,KAAKe,0B,GA/Cfd,IAAM9E,WCK3B,SAASoG,GAAYzI,GACxB,OAAKA,EAAM0I,QAIP,sBAAKrK,UAAWC,KAAEqK,YAAlB,UACI,8BACI,qBACIvI,IAAI,oJACJC,IAAK,OAEb,sBAAKhC,UAAWC,KAAEsK,iBAAlB,UACI,qBACIxI,IAAKJ,EAAM0I,QAAQpC,OAAOuC,MAAOxI,IAAK,KAC1C,cAAC,GAAD,CACIiE,OAAQtE,EAAMsE,OACd0D,iBAAkBhI,EAAMgI,yBAd7B,cAACnB,GAAD,ICHf,IAAM1H,GAAe,CACjB2J,UAAW,CACP,CAACzJ,GAAIC,cAAMW,QAAS,QAAS8I,WAAY,IACzC,CAAC1J,GAAIC,cAAMW,QAAS,MAAO8I,WAAY,KAE3CL,QAAS,KACTpE,OAAQ,IAsCC0E,GAAY,SAAC1E,GAAD,MACpB,CAACzE,KAAM,aAAcyE,WAgEX2E,GAlGQ,WAA2F,IAA1FtJ,EAAyF,uDAA/DR,GAAcS,EAAiD,uCAE7G,OAAQA,EAAOC,MACX,IAAK,WACD,OAAO,2BACAF,GADP,IAEImJ,UAAU,GAAD,mBACFnJ,EAAMmJ,WADJ,CAEL,CAACzJ,GAAIC,cAAMW,QAASL,EAAOsJ,YAAaH,WAAY,OAGhE,IAAK,mBACD,OAAO,2BACApJ,GADP,IAEI+I,QAAS9I,EAAO8I,UAExB,IAAK,aACD,OAAO,2BACA/I,GADP,IAEI2E,OAAQ1E,EAAO0E,SAEvB,QACI,OAAO3E,I,qBCpCZ,SAASwJ,GAAKnJ,GACjB,OACI,sBAAK3B,UAAWC,KAAEE,KAAlB,UACI,qBAAK4B,IAAI,6FAA6FC,IAAK,KAC1GL,EAAMC,QACP,8BACI,+BAAOD,EAAM+I,kB,wBCLvBK,GAAc5I,EAAiB,ICqBrC,IAAM6I,GAAmB7H,YAAwB,CAACC,KAAM,eAA/BD,EDlB6C,SAACxB,GAGnE,OACI,uBAAM0B,SAAU1B,EAAM2B,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACIE,YAAY,aACZvC,KAAK,cACLwC,UAAWZ,EACXa,SAAU,CAAC1B,EAAe8I,QAGlC,8BACI,wBAAQ/K,UAAWC,KAAEgL,OAArB,8BEJHC,GAAmBjH,aANR,SAAC3C,GACrB,MAAO,CACHmJ,UAAWnJ,EAAM6J,YAAYV,aAIoB,CACrDW,QJ0BmB,SAACP,GAAD,MAClB,CAACrJ,KAAM,WAAYqJ,iBI5BQ5G,EDdzB,SAAiBtC,GAEpB,IAAM0J,EAAgB1J,EAAM8I,UAAUhG,KAAI,SAAAmD,GAAC,OAAI,cAACkD,GAAD,CAAiBlJ,QAASgG,EAAEhG,QAAS8I,WAAY9C,EAAE8C,YAAxC9C,EAAE5G,OAO5D,OACI,sBAAKhB,UAAWC,KAAEqL,QAAlB,UACI,0CACA,cAACN,GAAD,CAAkB3H,SAPH,SAAC2B,GACpBrD,EAAMyJ,QAAQpG,EAAS6F,gBAQnB,8BACKQ,UEZV,SAASE,GAAQ5J,GACpB,OACI,sBAAK3B,UAAWC,KAAEoK,QAAlB,UACI,cAACD,GAAD,CACIC,QAAS1I,EAAM0I,QACfpE,OAAQtE,EAAMsE,OACd0D,iBAAkBhI,EAAMgI,mBAE5B,cAACuB,GAAD,O,ICUNM,G,2KAEF,WACI,IAAI3F,EAASgD,KAAKlH,MAAM8J,MAAMC,OAAO7F,OAChCA,IACDA,EAAS8F,KAAKC,UAAU/C,KAAKlH,MAAMkK,mBAEvChD,KAAKlH,MAAMmK,eAAejG,GAC1BgD,KAAKlH,MAAMoK,cAAclG,K,oBAG7B,WACI,OACI,qBAAK7F,UAAWC,KAAEoK,QAAlB,SACI,cAACkB,GAAD,CACIlB,QAASxB,KAAKlH,MAAM0I,QACpBpE,OAAQ4C,KAAKlH,MAAMsE,OACnB0D,iBAAkBd,KAAKlH,MAAMgI,yB,GAjBlBb,IAAM9E,WAgCtBI,gBACXH,aAToB,SAAC3C,GAAD,MAA+C,CACnE+I,QAAS/I,EAAM6J,YAAYd,QAC3BpE,OAAQ3E,EAAM6J,YAAYlF,OAC1B4F,iBAAkBvK,EAAMwC,KAAK+B,OAC7BhC,OAAQvC,EAAMwC,KAAKD,UAKM,CAACiI,eNFA,SAACjG,GAAD,gDAC1B,WAAMmD,GAAN,gBAAAC,EAAA,sEACuBjD,GAAsBH,GAD7C,OACUD,EADV,OAEIoD,EAVH,CAACxH,KAAM,mBAAoB6I,QAUAzE,IAF5B,2CAD0B,uDMEgBmG,cNIjB,SAAClG,GAAD,gDACzB,WAAMmD,GAAN,gBAAAC,EAAA,sEACuBjD,GAAqBH,GAD5C,OACUD,EADV,OAEIoD,EAAS2B,GAAU/E,IAFvB,2CADyB,uDMJgC+D,iBNU7B,SAAC1D,GAAD,gDAC5B,WAAM+C,GAAN,UAAAC,EAAA,sEACuBjD,GAAwBC,GAD/C,OAE4B,IAF5B,OAEaiD,YACLF,EAAS2B,GAAU1E,IAH3B,2CAD4B,yDMT5B+F,IACAjI,EAHWK,CAIboH,I,oBCjEa,OAA0B,wCCWlC,SAASS,GAAOtK,GACnB,OACI,yBAAQ3B,UAAWC,KAAEiM,OAArB,UACI,qBACInK,IAAKoK,GAAenK,IAAK,KAC7B,qBAAKhC,UAAWC,KAAEmM,WAAlB,SACKzK,EAAMkC,OACD,gCAAMlC,EAAM0K,MAAZ,IAAmB,wBAAQvE,QAASnG,EAAM2K,OAAvB,wBAEnB,cAAC,IAAD,CAASlM,GAAI,SAAb,wB,aCRhBU,GAAe,CACjB+E,OAAQ,KACRO,MAAO,KACPiG,MAAO,KACP9F,SAAS,EACT1C,QAAQ,GAmBC0I,GAAkB,SAAC1G,EAAuBO,EAAsBiG,EAAsB9F,EAAkB1C,GAAtF,MAC1B,CAACrC,KAAM,gBAAiBgL,QAAS,CAAC3G,SAAQO,QAAOiG,QAAO9F,UAAS1C,YAIzD4I,GAAkB,2DAAgB,WAAMzD,GAAN,wBAAAC,EAAA,sEACxB9C,KADwB,QACrCP,EADqC,QAElCsD,aAAehF,EAAiBiF,UAAU,EACtBvD,EAAKA,KAAzB5E,EADyC,EACzCA,GAAIoF,EADqC,EACrCA,MAAOiG,EAD8B,EAC9BA,MAChBrD,EAASuD,GAAgBvL,EAAIoF,EAAOiG,GAAO,GAAM,KAJV,2CAAhB,uDAkChBK,GAtDK,WAAwF,IAAvFpL,EAAsF,uDAA5DR,GAAcS,EAA8C,uCAEvG,OAAQA,EAAOC,MACX,IAAK,gBACD,OAAO,2BACAF,GACAC,EAAOiL,SAGlB,QACI,OAAOlL,ICZbqL,G,2KAEF,WACI9D,KAAKlH,MAAM8K,oB,oBAGf,WACI,OACI,cAACR,GAAD,eAAYpD,KAAKlH,Y,GARCmH,IAAM9E,WAkBrBC,gBALS,SAAC3C,GAAD,MAA+C,CACnEuC,OAAQvC,EAAMwC,KAAKD,OACnBwI,MAAO/K,EAAMwC,KAAKuI,SAGkB,CAACE,mBAAiBE,mBAAiBH,ODyBrD,2DAAgB,WAAMtD,GAAN,UAAAC,EAAA,sEACf9C,KADe,cAEzB+C,aAAehF,EAAiBiF,SACrCH,EAASuD,GAAgB,KAAM,KAAM,MAAM,GAAO,IAHpB,2CAAhB,wDCzBPtI,CAAqE0I,ICqC9EC,GAAiBzJ,YAAwB,CAACC,KAAM,SAA/BD,EAnCsC,SAAC,GAA2B,IAA1BG,EAAyB,EAAzBA,aAAcV,EAAW,EAAXA,MACzE,OACI,uBAAMS,SAAUC,EAAhB,UACI,8BACI,cAACC,EAAA,EAAD,CACIE,YAAa,QACbvC,KAAM,QACNwC,UAAWV,EACXW,SAAU,CAAC1B,OAGnB,8BACI,cAACsB,EAAA,EAAD,CACIE,YAAa,WACbvC,KAAM,WACNwC,UAAWV,EACXW,SAAU,CAAC1B,GACXT,KAAM,eAGd,gCACI,cAAC+B,EAAA,EAAD,CACI/B,KAAK,WACLN,KAAK,aACLwC,UAAWV,IAJnB,kBAOCJ,GAAS,qBAAK5C,UAAWC,IAAE4M,iBAAlB,SAAqCjK,IAC/C,8BACI,mDAqBDqB,gBALS,SAAC3C,GAAD,MAA+C,CACnEiF,QAASjF,EAAMwC,KAAKyC,QACpB1C,OAAQvC,EAAMwC,KAAKD,UAGiB,CAACwI,MFxCpB,SAACjG,EAAeC,EAAkBC,EAAqBC,GAAvD,gDAAsF,WAAMyC,GAAN,gBAAAC,EAAA,sEACpF9C,GAAcC,EAAOC,EAAUC,EAAYC,GADyC,QACjGX,EADiG,QAE9FsD,aAAehF,EAAiBiF,QACrCH,EAASyD,MAEL7G,EAAKkH,SAASzK,OACd2G,EAAS+D,aAAW,QAAS,CAACC,OAAQpH,EAAKkH,SAAS,MAEpD9D,EAAS+D,aAAW,QAAS,CAACC,OAAQ,gBARyD,2CAAtF,wDEwCN/I,EAjEuD,SAACtC,GAInE,OAAIA,EAAMkC,OACC,cAAC,IAAD,CAAUzD,GAAI,aAGrB,gCACI,uCACA,cAACwM,GAAD,CAAgBvJ,SATP,SAAC2B,GACdrD,EAAM0K,MAAMrH,EAASoB,MAAOpB,EAASqB,SAAUrB,EAASsB,WAAYtB,EAASuB,kBCMtE0G,OAlBf,WACI,OACI,sBAAKjN,UAAWC,IAAEiN,WAAlB,UACI,cAAC,GAAD,IACA,cAACnN,EAAD,IACA,sBAAKC,UAAWC,IAAEkN,kBAAlB,UACI,cAAC,IAAD,CAAOC,OAAK,EAACtL,KAAK,oBAAoBuL,OAAQ,kBAAM,cAAC,GAAD,OACpD,cAAC,IAAD,CAAOD,OAAK,EAACtL,KAAK,WAAWuL,OAAQ,kBAAM,cAAClJ,GAAD,OAC3C,cAAC,IAAD,CAAOiJ,OAAK,EAACtL,KAAK,SAASuL,OAAQ,kBAAM,cAAC,GAAD,OACzC,cAAC,IAAD,CAAOD,OAAK,EAACtL,KAAK,QAAQuL,OAAQ,kBAAM,cAAC7M,EAAD,OACxC,cAAC,IAAD,CAAO4M,OAAK,EAACtL,KAAK,SAASuL,OAAQ,kBAAM,cAAC3M,EAAD,OACzC,cAAC,IAAD,CAAO0M,OAAK,EAACtL,KAAK,YAAYuL,OAAQ,kBAAM,cAACzM,EAAD,OAC5C,cAAC,IAAD,CAAOwM,OAAK,EAACtL,KAAK,SAASuL,OAAQ,kBAAM,cAAC,GAAD,c,UCvBnDvM,GAAe,GAQNwM,GALQ,WAA2F,IAA1FhM,EAAyF,uDAA/DR,GAE9C,OAAOQ,G,UCCLiM,GAAcC,aAAgB,CAChCrC,YAAaP,GACbtG,YAAajD,EACboM,QAASH,GACTvE,UAAW/B,GACXlD,KAAM4I,GACNtJ,KAAMsK,OAKGC,GAAQC,aAAYL,GAAaM,aAAgBC,OAe9DC,OAAOJ,MAAQA,GC1BfK,IAASX,OACL,cAAC,IAAMY,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACI,cAAC,GAAD,UAIZO,SAASC,eAAe,SAO5B7O,K,mBCvBAF,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,4B,mBCA3GD,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,mBCA3HD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,0B,mBCA9DD,EAAOC,QAAU,CAAC,WAAa,wBAAwB,kBAAoB,iC,mBCA3ED,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,iC,mBCA/DD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,aAAe,8B,mBCAtED,EAAOC,QAAU,CAAC,YAAc,iCAAiC,iBAAmB,wC,mBCApFD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,8B","file":"static/js/main.0744e58a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__1E9ra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__P7Nrm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__hPAd8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1jjej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1AFhw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__6-fH1\",\"item\":\"Navbar_item__3Ldnh\",\"activeLink\":\"Navbar_activeLink__uFs2O\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Navbar.module.css'\r\n\r\nexport function Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\n\r\nexport function News() {\r\n    return (\r\n        <div className={s.news}>\r\n            News\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\n\r\nexport function Music() {\r\n    return (\r\n        <div className={s.music}>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div className={s.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import {v1} from 'uuid';\r\n\r\n// export type DialogsPageType = {\r\n//     dialogsData: Array<DialogItemType>\r\n//     messagesData: Array<MessageItemType>\r\n//     newMessageText: string\r\n// }\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: v1(), name: 'Marta'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Vera'},\r\n        {id: v1(), name: 'Anton'},\r\n        {id: v1(), name: 'Vanya'},\r\n    ] as Array<DialogItemType>,\r\n    messagesData: [\r\n        {id: v1(), messageContent: 'Hello'},\r\n        {id: v1(), messageContent: 'How are you?'},\r\n        {id: v1(), messageContent: 'Yo'},\r\n    ] as Array<MessageItemType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: DialogsActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'ADD-MESSAGE':\r\n            return {\r\n                ...state,\r\n                messagesData: [\r\n                    ...state.messagesData,\r\n                    {id: v1(), messageContent: action.newMessageText}\r\n                ],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const addMessage = (newMessageText: string) =>\r\n    ({type: 'ADD-MESSAGE', newMessageText} as const)\r\n\r\n\r\n//types\r\nexport type MessageItemType = {\r\n    id?: string\r\n    messageContent: string\r\n}\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport type AddMessageActionType = ReturnType<typeof addMessage>\r\nexport type DialogsActionsType = AddMessageActionType\r\n\r\n\r\n\r\nexport default dialogsReducer","import React from 'react'\r\nimport s from './Message.module.css'\r\nimport {MessageItemType} from '../../../redux/dialogs-reducer';\r\n\r\n\r\nexport function Message(props: MessageItemType) {\r\n\r\n    return (\r\n        <div className={s.message}>{props.messageContent}</div>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './DialogItem.module.css'\r\nimport {DialogItemType} from '../../../redux/dialogs-reducer';\r\n\r\n\r\nexport function DialogItem(props: DialogItemType) {\r\n    const path = '/dialogs/' + props.id\r\n\r\n    return (\r\n        <div className={`${s.item} ${s.activeLink}`}>\r\n            <NavLink to={path}>\r\n                <img src=\"https://avatars.mds.yandex.net/get-pdb/1025945/a6f96698-c78d-44fb-b802-38e74e0164dd/s1200\" alt={''}/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","export const requiredField = (value: string) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n","import React from 'react'\r\nimport {WrappedFieldProps} from 'redux-form/lib/Field';\r\nimport s from './FormsControls.module.css'\r\n\r\n\r\nconst FormControl: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError && s.error)}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}","import {maxLengthCreator, requiredField} from '../../../utils/validators/validators';\r\nimport React from 'react';\r\nimport {Field, InjectedFormProps} from 'redux-form';\r\nimport s from '../Dialogs.module.css';\r\nimport {Textarea} from '../../common/formsControls/FormsControls';\r\n\r\nexport type FormDataType = {\r\n    newMessageText: string\r\n}\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\n\r\nexport const AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    className={s.textarea}\r\n                    placeholder='Enter your message'\r\n                    name='newMessageText'\r\n                    component={Textarea}\r\n                    validate={[requiredField, maxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {Message} from './Message/Message';\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {DialogsType} from './DialogsContainer';\r\nimport {reduxForm} from 'redux-form';\r\nimport {AddMessageForm, FormDataType} from './Message/AddMessageForm';\r\n\r\n\r\nexport function Dialogs(props: DialogsType) {\r\n\r\n    const dialogsElements = props.stateDialogsPage.dialogsData.map(d => <DialogItem\r\n        key={d.id} name={d.name}\r\n        id={d.id}/>)\r\n    const messagesElements = props.stateDialogsPage.messagesData.map(m => <Message\r\n        key={m.id}\r\n        messageContent={m.messageContent}/>)\r\n\r\n\r\n    const onClickAddMessage = (formData: FormDataType) => {\r\n        props.addMessage(formData.newMessageText)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messagesItem}>\r\n                {messagesElements}\r\n                <AddMessageReduxForm onSubmit={onClickAddMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst AddMessageReduxForm = reduxForm<FormDataType>({form: 'addMessageForm'})(AddMessageForm)","import React, {ComponentType} from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../redux/redux-store';\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}","import axios from 'axios';\r\nimport {ProfileType} from '../redux/profile-reducer';\r\nimport {UsersType} from '../redux/users-reducer';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '56cc9d09-6ac5-48a7-98d1-6f7ea21ef704',\r\n    },\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get<GetUsersType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data)\r\n    },\r\n    followUsers(userId: string) {\r\n        return instance.post<CommonResponseType>(`follow/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n    unfollowUsers(userId: string) {\r\n        return instance.delete<CommonResponseType>(`follow/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get<string>(`/profile/status/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<CommonResponseType>(`/profile/status`, {status})\r\n            .then(res => res.data)\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<CommonResponseType<GetAuthUserData>>(`auth/me`)\r\n            .then(res => res.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: boolean) {\r\n        return instance.post<CommonResponseType<{ userId: string }>>(`/auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete<CommonResponseType>(`/auth/login`)\r\n            .then(res => res.data)\r\n    },\r\n}\r\n\r\n//types\r\nexport enum ResponseStatuses {\r\n    success = 0,\r\n    error = 1,\r\n    captcha = 10,\r\n}\r\n\r\ntype GetUsersType = {\r\n    items: UsersType[]\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\ntype CommonResponseType<T = {}> = {\r\n    resultCode: number\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    data: T\r\n}\r\n\r\ntype GetAuthUserData = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n","import {addMessage, InitialStateType} from '../../redux/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {ComponentType} from 'react';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    stateDialogsPage: InitialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: (newMessageText: string) => void\r\n}\r\nexport type DialogsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        stateDialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = compose<ComponentType>(\r\n    connect(mapStateToProps, {addMessage,}),\r\n    withAuthRedirect\r\n)(Dialogs)","import {ResponseStatuses, usersAPI} from '../api/api';\r\nimport {AppThunk} from './redux-store';\r\n\r\n\r\n// type InitialStateType = {\r\n//     users: Array<UsersType>\r\n//     pageSize: number\r\n//     totalUsersCount: number\r\n//     currentPage: number\r\n//     isFetching: boolean\r\n//     followingInProgress: string[]\r\n// }\r\n\r\nconst initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as string[],\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: UsersActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: true} : u)\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: false} : u)\r\n            }\r\n        case 'SET-USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'SET-CURRENT-PAGE':\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case 'SET-TOTAL-USERS-COUNT':\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        case 'TOGGLE-IS-FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case 'TOGGLE-IS-FOLLOWING-PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingInProgress:\r\n                    action.isFetching\r\n                        ? [...state.followingInProgress, action.userId]\r\n                        : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const followSuccess = (userId: string) =>\r\n    ({type: 'FOLLOW', userId} as const)\r\n\r\nexport const unfollowSuccess = (userId: string) =>\r\n    ({type: 'UNFOLLOW', userId} as const)\r\n\r\nexport const setUsers = (users: Array<UsersType>) =>\r\n    ({type: 'SET-USERS', users} as const)\r\n\r\nexport const setCurrentPage = (currentPage: number) =>\r\n    ({type: 'SET-CURRENT-PAGE', currentPage} as const)\r\n\r\nexport const setTotalUsersCount = (totalCount: number) =>\r\n    ({type: 'SET-TOTAL-USERS-COUNT', totalCount} as const)\r\n\r\nexport const toggleIsFetching = (isFetching: boolean) =>\r\n    ({type: 'TOGGLE-IS-FETCHING', isFetching} as const)\r\n\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: string) =>\r\n    ({type: 'TOGGLE-IS-FOLLOWING-PROGRESS', isFetching, userId} as const)\r\n\r\n\r\n//thunks\r\nexport const getUsers = (currentPage: number, pageSize: number): AppThunk =>\r\n    async dispatch => {\r\n        dispatch(toggleIsFetching(true))\r\n        const data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n\r\nexport const follow = (userId: string): AppThunk =>\r\n    async dispatch => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        const data = await usersAPI.followUsers(userId)\r\n        if (data.resultCode === ResponseStatuses.success) {\r\n            dispatch(followSuccess(userId))\r\n        }\r\n        dispatch(toggleIsFollowingProgress(false, userId))\r\n    }\r\n\r\nexport const unfollow = (userId: string): AppThunk =>\r\n    async dispatch => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        const data = await usersAPI.unfollowUsers(userId)\r\n        if (data.resultCode === ResponseStatuses.success) {\r\n            dispatch(unfollowSuccess(userId))\r\n        }\r\n        dispatch(toggleIsFollowingProgress(false, userId))\r\n    }\r\n\r\n//types\r\nexport type UsersType = {\r\n    id: string\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    uniqueUrlName: string | null\r\n    location?: {\r\n        city: string\r\n        country: string\r\n    }\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\nexport type FollowSuccessActionType = ReturnType<typeof followSuccess>\r\nexport type UnfollowSuccessActionType = ReturnType<typeof unfollowSuccess>\r\nexport type SetUsersActionType = ReturnType<typeof setUsers>\r\nexport type SetCurrentPageActionType = ReturnType<typeof setCurrentPage>\r\nexport type SetTotalUsersCountActionType = ReturnType<typeof setTotalUsersCount>\r\nexport type ToggleIsFetchingActionType = ReturnType<typeof toggleIsFetching>\r\nexport type ToggleIsFollowingProgressActionType = ReturnType<typeof toggleIsFollowingProgress>\r\n\r\nexport type UsersActionsType =\r\n    | FollowSuccessActionType\r\n    | UnfollowSuccessActionType\r\n    | SetUsersActionType\r\n    | SetCurrentPageActionType\r\n    | SetTotalUsersCountActionType\r\n    | ToggleIsFetchingActionType\r\n    | ToggleIsFollowingProgressActionType\r\n\r\n\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/user.4409fc97.png\";","import React from 'react';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport s from './Users.module.css';\r\nimport {UsersType} from '../../redux/users-reducer';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UsersType>\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    followingInProgress: string[]\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: string) => void\r\n}\r\n\r\nexport function Users(props: UsersPropsType) {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => {\r\n                    return <span className={props.currentPage === p ? s.selectedPage : ''}\r\n                                 onClick={(e) => props.onPageChanged(p)}>{p}</span>\r\n                })}\r\n            </div>\r\n            {\r\n                props.users.map(u => {\r\n                    const onClickFollow = () => props.follow(u.id)\r\n                    // props.toggleIsFollowingProgress(true, u.id)\r\n                    //\r\n                    // followAPI.followUsers(u.id)\r\n                    //     .then(data => {\r\n                    //         if (data.resultCode === 0) {\r\n                    //             props.follow(u.id)\r\n                    //         }\r\n                    //         props.toggleIsFollowingProgress(false, u.id)\r\n                    //     })\r\n\r\n                    const onClickUnFollow = () => props.unfollow(u.id)\r\n                    // props.toggleIsFollowingProgress(true, u.id)\r\n                    // unfollowAPI.unfollowUsers(u.id)\r\n                    //     .then(data => {\r\n                    //         if (data.resultCode === 0) {\r\n                    //             props.unfollow(u.id)\r\n                    //         }\r\n                    //         props.toggleIsFollowingProgress(false, u.id)\r\n                    //     })\r\n\r\n\r\n                    return (\r\n                        <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                <img src={u.photos.small !== null ? u.photos.small : userPhoto}\r\n                                     className={s.userPhoto} alt={''}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed\r\n                                ?\r\n                                <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={onClickUnFollow}>unFollow</button>\r\n                                : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                          onClick={onClickFollow}>follow</button>}\r\n                        </div>\r\n                    </span>\r\n                            <span>\r\n                        <div>\r\n                            {u.name}\r\n                        </div>\r\n                        <div>\r\n                            {u.status}\r\n                        </div>\r\n                    </span>\r\n                            <span>\r\n                            <div>{'u.location.country'}</div>\r\n                            <div>{'u.location.city'}</div>\r\n                    </span>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/preloader.5665744c.svg\";","import preloader from '../../../assets/images/preloader.svg';\r\nimport React from 'react';\r\n\r\nexport function Preloader() {\r\n    return <>\r\n        <img src={preloader} alt={''}/>\r\n    </>\r\n}","import {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    getUsers,\r\n    setCurrentPage,\r\n    toggleIsFollowingProgress,\r\n    unfollow,\r\n    UsersType\r\n} from '../../redux/users-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport React, {ComponentType} from 'react';\r\nimport {Users} from './Users';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\ntype MapDispatchToPropsType = {\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: string) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n                toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleIsFollowingProgress,\r\n        getUsers,\r\n    }),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n","import React, {ChangeEvent} from 'react'\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nclass ProfileStatus extends React.Component<PropsType> {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: any) {\r\n        if (prevProps.status !== this.props.status)\r\n            this.setState({\r\n                status: this.state.status\r\n            })\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        })\r\n        this.props.updateUserStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    !this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || '@@@'}</span>\r\n                    </div>\r\n                }\r\n                {\r\n                    this.state.editMode &&\r\n                    <div>\r\n                        <input\r\n                            onBlur={this.deactivateEditMode}\r\n                            autoFocus\r\n                            value={this.state.status}\r\n                            onChange={this.onStatusChange}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus\r\n\r\n","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport {ProfileType} from '../../../redux/profile-reducer';\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nexport function ProfileInfo(props: PropsType) {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div>\r\n                <img\r\n                    src=\"https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300\"\r\n                    alt={''}/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img\r\n                    src={props.profile.photos.large} alt={''}/>\r\n                <ProfileStatus\r\n                    status={props.status}\r\n                    updateUserStatus={props.updateUserStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {v1} from 'uuid';\r\nimport {AppThunk} from './redux-store';\r\nimport {profileAPI} from '../api/api';\r\n\r\n\r\n// export type InitialStateType = {\r\n//     postsData: Array<PostType>\r\n//     profile: ProfileType | null,\r\n//     status: string,\r\n// }\r\n\r\nconst initialState = {\r\n    postsData: [\r\n        {id: v1(), message: 'Hello', likesCount: 11},\r\n        {id: v1(), message: 'Buy', likesCount: 15},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'ADD-POST':\r\n            return {\r\n                ...state,\r\n                postsData: [\r\n                    ...state.postsData,\r\n                    {id: v1(), message: action.newPostText, likesCount: 0}\r\n                ],\r\n            }\r\n        case 'SET-USER-PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case 'SET-STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const addPost = (newPostText: string) =>\r\n    ({type: 'ADD-POST', newPostText} as const)\r\n\r\nexport const setUserProfile = (profile: ProfileType) =>\r\n    ({type: 'SET-USER-PROFILE', profile} as const)\r\n\r\nexport const setStatus = (status: string) =>\r\n    ({type: 'SET-STATUS', status} as const)\r\n\r\n\r\n//thunks\r\nexport const getUserProfile = (userId: string): AppThunk =>\r\n    async dispatch => {\r\n        const data = await profileAPI.getProfile(userId)\r\n        dispatch(setUserProfile(data))\r\n    }\r\n\r\nexport const getUserStatus = (userId: string): AppThunk =>\r\n    async dispatch => {\r\n        const data = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(data))\r\n    }\r\n\r\nexport const updateUserStatus = (status: string): AppThunk =>\r\n    async dispatch => {\r\n        const data = await profileAPI.updateStatus(status)\r\n        if (data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    }\r\n\r\n\r\n//types\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    contacts: {\r\n        facebook: string\r\n        website: string\r\n        vk: string\r\n        twitter: string\r\n        instagram: string\r\n        youtube: string\r\n        github: string\r\n        mainLink: string\r\n    }\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type AddPostActionType = ReturnType<typeof addPost>\r\nexport type SetUserProfileActionType = ReturnType<typeof setUserProfile>\r\nexport type SetStatusActionType = ReturnType<typeof setStatus>\r\n\r\nexport type ProfileActionsType =\r\n    | AddPostActionType\r\n    | SetUserProfileActionType\r\n    | SetStatusActionType\r\n\r\n\r\n\r\nexport default profileReducer","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport function Post(props: PropsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://shapka-youtube.ru/wp-content/uploads/2021/02/prikolnaya-avatarka-dlya-patsanov.jpg\" alt={''}/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {maxLengthCreator, requiredField} from '../../../utils/validators/validators';\r\nimport React from 'react';\r\nimport {Field, InjectedFormProps} from 'redux-form';\r\nimport {Textarea} from '../../common/formsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\n\r\nexport type FormDataType = {\r\n    newPostText: string\r\n}\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\n\r\nexport const AddPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder='enter text'\r\n                    name='newPostText'\r\n                    component={Textarea}\r\n                    validate={[requiredField, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\nimport {Post} from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {MyPostsType} from './MyPostsContainer';\r\nimport {reduxForm} from 'redux-form';\r\nimport {AddPostForm, FormDataType} from './AddPostForm';\r\n\r\n\r\nexport function MyPosts(props: MyPostsType) {\r\n\r\n    const postsElements = props.postsData.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n\r\n    const onClickAddPost = (formData: FormDataType) => {\r\n        props.addPost(formData.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onClickAddPost}/>\r\n\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst AddPostReduxForm = reduxForm<FormDataType>({form: 'addPostForm'})(AddPostForm)\r\n","import {addPost, PostType} from '../../../redux/profile-reducer';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\n\r\n\r\nexport type MapStateToPropsType = {\r\n    postsData: Array<PostType>\r\n}\r\n\r\nexport type MapDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nexport type MyPostsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n})(MyPosts)\r\n\r\n","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\r\nimport {ProfileType} from '../../redux/profile-reducer';\r\n\r\ntype PropsType= {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\nexport function Profile(props: PropsType) {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateUserStatus={props.updateUserStatus}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {ComponentType} from 'react'\r\nimport s from './Profile.module.css'\r\nimport {Profile} from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {getUserProfile, getUserStatus, ProfileType, updateUserStatus,} from '../../redux/profile-reducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n    getUserStatus: (userId: string) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\nexport type ProfilePropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = JSON.stringify(this.props.authorizedUserId)\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.profile}>\r\n                <Profile\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateUserStatus={this.props.updateUserStatus}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","export default __webpack_public_path__ + \"static/media/Logo_header.8aaf41b6.png\";","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css'\r\nimport LogoForHeader from '../../assets/images/Logo_header.png';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nexport function Header(props: PropsType) {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src={LogoForHeader} alt={''}/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} <button onClick={props.logout}>Log out</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}","import {authAPI, ResponseStatuses} from '../api/api';\r\nimport {AppThunk} from './redux-store';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\n\r\n// export type InitialStateType = {\r\n//     userId: number | null\r\n//     email: string | null\r\n//     login: string | null\r\n//     isAuth: boolean\r\n// }\r\n\r\nconst initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    captcha: false,\r\n    isAuth: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, captcha: boolean, isAuth: boolean) =>\r\n    ({type: 'SET-USER-DATA', payload: {userId, email, login, captcha, isAuth}} as const)\r\n\r\n\r\n//thunks\r\nexport const getAuthUserData = (): AppThunk => async dispatch => {\r\n    const data = await authAPI.authMe()\r\n    if (data.resultCode === ResponseStatuses.success) {\r\n        let {id, email, login} = data.data\r\n        dispatch(setAuthUserData(id, email, login, true, true))\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: boolean): AppThunk => async dispatch => {\r\n    const data = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (data.resultCode === ResponseStatuses.success) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (data.messages.length) {\r\n            dispatch(stopSubmit('login', {_error: data.messages[0]}))\r\n        } else {\r\n            dispatch(stopSubmit('login', {_error: 'Some error'}))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = (): AppThunk => async dispatch => {\r\n    const data = await authAPI.logout()\r\n    if (data.resultCode === ResponseStatuses.success) {\r\n        dispatch(setAuthUserData(null, null, null, false, false))\r\n    }\r\n}\r\n\r\n\r\n//types\r\nexport type SetAuthUserDataActionType = ReturnType<typeof setAuthUserData>\r\nexport type AuthActionsType = SetAuthUserDataActionType\r\n\r\n\r\nexport default authReducer","import React from 'react'\r\nimport {Header} from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {getAuthUserData, logout, setAuthUserData} from '../../redux/auth-reducer';\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    setAuthUserData: (userId: number, email: string, login: string, captcha: boolean, isAuth: boolean ) => void\r\n    getAuthUserData: () => void\r\n    logout: () => void\r\n}\r\n\r\nexport type HeaderPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getAuthUserData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData, getAuthUserData, logout})(HeaderContainer)","import React from 'react'\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {Input} from '../common/formsControls/FormsControls';\r\nimport {requiredField} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport s from '../common/formsControls/FormsControls.module.css'\r\n\r\n// type FormDataType = {\r\n//     email: string | null\r\n//     password: string | null\r\n//     rememberMe: boolean | null\r\n//     captcha: boolean | null\r\n// }\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: boolean\r\n}\r\n\r\n\r\nconst Login: React.FC<MapStateToPropsType & MapDispatchToPropsType> = (props) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Email'}\r\n                    name={'email'}\r\n                    component={Input}\r\n                    validate={[requiredField]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Password'}\r\n                    name={'password'}\r\n                    component={Input}\r\n                    validate={[requiredField]}\r\n                    type={'password'}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    type=\"checkbox\"\r\n                    name=\"rememberMe\"\r\n                    component={Input}\r\n                /> remember me\r\n            </div>\r\n            {error && <div className={s.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\ntype MapStateToPropsType = {\r\n    captcha: boolean | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: boolean) => void\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    captcha: state.auth.captcha,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(MapStateToProps, {login})(Login)","import React from 'react'\r\nimport s from './App.module.css'\r\nimport {Navbar} from './components/Navbar/Navbar'\r\nimport {News} from './components/News/News';\r\nimport {Music} from './components/Music/Music';\r\nimport {Settings} from './components/Settings/Settings';\r\nimport {Route} from 'react-router-dom'\r\nimport {DialogsContainer} from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.appWrapper}>\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className={s.appWrapperContent}>\r\n                <Route exact path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                <Route exact path=\"/dialogs\" render={() => <DialogsContainer/>}/>\r\n                <Route exact path=\"/users\" render={() => <UsersContainer/>}/>\r\n                <Route exact path=\"/news\" render={() => <News/>}/>\r\n                <Route exact path=\"/music\" render={() => <Music/>}/>\r\n                <Route exact path=\"/settings\" render={() => <Settings/>}/>\r\n                <Route exact path=\"/login\" render={() => <Login/>}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","export type SidebarActionsType = ReturnType<any>\r\n\r\n\r\nconst initialState = {}\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst sidebarReducer = (state: InitialStateType = initialState, action: SidebarActionsType): InitialStateType => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport profileReducer, {ProfileActionsType} from './profile-reducer';\r\nimport dialogsReducer, {DialogsActionsType} from './dialogs-reducer';\r\nimport sidebarReducer, {SidebarActionsType} from './sidebar-reducer';\r\nimport usersReducer, {UsersActionsType} from './users-reducer';\r\nimport authReducer, {AuthActionsType} from './auth-reducer';\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppActionsType =\r\n    | AuthActionsType\r\n    | DialogsActionsType\r\n    | ProfileActionsType\r\n    | SidebarActionsType\r\n    | UsersActionsType\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppStateType,\r\n    unknown,\r\n    AppActionsType>\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\n","import React from 'react'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './redux/redux-store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Dn8Z\",\"dialogsItem\":\"Dialogs_dialogsItem__1NNkN\",\"textarea\":\"Dialogs_textarea__2IKdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2Z8L4\",\"error\":\"FormsControls_error__BtpDs\",\"formSummaryError\":\"FormsControls_formSummaryError__2qS17\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__395W3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1Sq30\",\"button\":\"MyPosts_button__3kRgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1upY6\",\"appWrapperContent\":\"App_appWrapperContent__1w-fS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__FOhNE\",\"activeLink\":\"DialogItem_activeLink__1OjsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__Sr8R7\",\"selectedPage\":\"Users_selectedPage__3gyJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__26XEX\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2MG0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__tmv2U\",\"loginBlock\":\"Header_loginBlock__1H5dx\"};"],"sourceRoot":""}