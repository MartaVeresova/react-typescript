{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","App.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Message/Message.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","reportWebVitals.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","redux/profile-reduser.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","redux/dialogs-reduser.tsx","components/Dialogs/Dialogs.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","App.tsx","redux/sidebar-reduser.tsx","redux/state.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","s","header","src","Navbar","nav","item","to","activeClassName","activeLink","active","Post","props","message","likesCount","ADD_POST","UPDATE_NEW_POST_TEXT","profileReduser","state","action","type","newPost","id","v1","newPostText","postsData","push","newText","MyPosts","postsElements","map","p","onClickAddPost","dispatch","myPosts","textarea","onChange","e","currentTarget","value","onKeyPress","key","button","onClick","ProfileInfo","profileInfo","descriptionBlock","Profile","profile","stateProfilePage","Message","messageContent","DialogItem","path","name","ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","dialogsReduser","newMessage","newMessageText","messagesData","Dialogs","dialogsElements","stateDialogsPage","dialogsData","d","messagesElements","m","onClickAddMessage","dialogs","dialogsItem","messagesItem","placeholder","News","news","Music","music","Settings","settings","App","appWrapper","appWrapperContent","exact","render","profilePage","dialogsPage","sidebarReduser","store","_state","sidebar","_callSubscriber","console","log","subscribe","observer","this","getState","rerenderEntireTree","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.eac630f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__6-fH1\",\"item\":\"Navbar_item__3Ldnh\",\"activeLink\":\"Navbar_activeLink__uFs2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Dn8Z\",\"dialogsItem\":\"Dialogs_dialogsItem__1NNkN\",\"textarea\":\"Dialogs_textarea__2IKdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1Sq30\",\"textarea\":\"MyPosts_textarea__1jrIv\",\"button\":\"MyPosts_button__3kRgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1upY6\",\"appWrapperContent\":\"App_appWrapperContent__1w-fS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__26XEX\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2MG0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__FOhNE\",\"activeLink\":\"DialogItem_activeLink__1OjsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__tmv2U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__395W3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1AFhw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1jjej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__1E9ra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__P7Nrm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__hPAd8\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport s from './Header.module.css'\r\n\r\nexport function Header() {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src='https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Logo_TV_2015.svg/1200px-Logo_TV_2015.svg.png'/>\r\n        </header>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Navbar.module.css'\r\n\r\nexport function Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport s from './Post.module.css'\r\nimport {PostType} from '../../../../redux/state';\r\n\r\n\r\nexport function Post(props: PostType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://shapka-youtube.ru/wp-content/uploads/2021/02/prikolnaya-avatarka-dlya-patsanov.jpg\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {ActionsTypes, PostType, ProfilePageType} from './state';\r\nimport {v1} from 'uuid';\r\n\r\nexport const ADD_POST = 'ADD-POST'\r\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST}) as const\r\nexport const updateNewPostTextActionCreator = (newText: string) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: newText\r\n}) as const\r\n\r\n\r\nconst profileReduser = (state: ProfilePageType, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost: PostType = {\r\n                id: v1(),\r\n                message: state.newPostText,\r\n                likesCount: 0,\r\n            }\r\n            state.postsData.push(newPost)\r\n            state.newPostText = ''\r\n            return state\r\n        case UPDATE_NEW_POST_TEXT:\r\n            state.newPostText = action.newText\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default profileReduser","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport {Post} from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {ActionsTypes, ProfilePageType,} from '../../../redux/state';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from '../../../redux/profile-reduser';\r\n\r\ntype PropsType = ProfilePageType & {\r\n    dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\nexport function MyPosts(props: PropsType) {\r\n\r\n    const postsElements = props.postsData.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    const onClickAddPost = () => {\r\n        //props.addPost()\r\n        props.dispatch(addPostActionCreator())\r\n    }\r\n    const onKeyPressEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        (e.key === 'Enter') && onClickAddPost()\r\n    }\r\n    const onChangePost = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        //props.updateNewPostText(e.currentTarget.value)\r\n        props.dispatch(updateNewPostTextActionCreator(e.currentTarget.value))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div className={s.textarea}>\r\n                    <textarea\r\n                        onChange={onChangePost}\r\n                        value={props.newPostText}\r\n                        onKeyPress={onKeyPressEnter}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button className={s.button} onClick={onClickAddPost}>\r\n                        Add post\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nexport function ProfileInfo() {\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div>\r\n                <img\r\n                    src=\"https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300\"/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                ava+description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport {MyPosts} from './MyPosts/MyPosts';\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport {ActionsTypes, ProfilePageType} from '../../redux/state';\r\n\r\n\r\nexport type ProfilePropsType = {\r\n    stateProfilePage: ProfilePageType\r\n    dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\n\r\nexport function Profile(props: ProfilePropsType) {\r\n\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo/>\r\n            <MyPosts\r\n                postsData={props.stateProfilePage.postsData}\r\n                newPostText={props.stateProfilePage.newPostText}\r\n                dispatch={props.dispatch}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from './Message.module.css'\r\nimport {MessageItemType} from '../../../redux/state';\r\n\r\n\r\nexport function Message(props: MessageItemType) {\r\n\r\n    return (\r\n        <div className={s.message}>{props.messageContent}</div>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './DialogItem.module.css'\r\nimport {DialogItemType} from '../../../redux/state';\r\n\r\n\r\nexport function DialogItem(props: DialogItemType) {\r\n    const path = '/dialogs/' + props.id\r\n\r\n    return (\r\n        <div className={`${s.item} ${s.activeLink}`}>\r\n            <NavLink to={path}>\r\n                <img src=\"https://avatars.mds.yandex.net/get-pdb/1025945/a6f96698-c78d-44fb-b802-38e74e0164dd/s1200\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {ActionsTypes, DialogsPageType} from './state';\r\nimport {v1} from 'uuid';\r\n\r\nexport const ADD_MESSAGE = 'ADD-MESSAGE'\r\nexport const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'\r\n\r\nexport const addMessageActionCreator = () => ({type: ADD_MESSAGE}) as const\r\nexport const updateNewMessageTextActionCreator = (newText: string) => ({\r\n    type: UPDATE_NEW_MESSAGE_TEXT,\r\n    newText: newText\r\n}) as const\r\n\r\n\r\nconst dialogsReduser = (state: DialogsPageType, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessage = {\r\n                id: v1(),\r\n                messageContent: state.newMessageText,\r\n            }\r\n            state.messagesData.push(newMessage)\r\n            state.newMessageText = ''\r\n            return state\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            state.newMessageText = action.newText\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogsReduser","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {Message} from './Message/Message';\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {ActionsTypes, DialogsPageType,} from '../../redux/state';\r\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from '../../redux/dialogs-reduser';\r\n\r\n\r\nexport type DialogsPropsType = {\r\n    stateDialogsPage: DialogsPageType\r\n    dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n    const dialogsElements = props.stateDialogsPage.dialogsData.map(d => <DialogItem\r\n        key={d.id} name={d.name}\r\n        id={d.id}/>)\r\n    const messagesElements = props.stateDialogsPage.messagesData.map(m => <Message\r\n        key={m.id}\r\n        messageContent={m.messageContent}/>)\r\n\r\n    const onClickAddMessage = () => {\r\n        //props.addMessage()\r\n        props.dispatch(addMessageActionCreator())\r\n    }\r\n    const onKeyPressEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        (e.key === 'Enter') && onClickAddMessage()\r\n    }\r\n\r\n    const onChangeMessage = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        //props.updateNewMessageText(e.currentTarget.value)\r\n        props.dispatch(updateNewMessageTextActionCreator(e.currentTarget.value))\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messagesItem}>\r\n                {messagesElements}\r\n                <div>\r\n                    <textarea\r\n                        placeholder=\"Enter your message\"\r\n                        className={s.textarea}\r\n                        onChange={onChangeMessage}\r\n                        value={props.stateDialogsPage.newMessageText}\r\n                        onKeyPress={onKeyPressEnter}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={onClickAddMessage}>Add message</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\n\r\nexport function News() {\r\n    return (\r\n        <div className={s.news}>\r\n            News\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\n\r\nexport function Music() {\r\n    return (\r\n        <div className={s.music}>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div className={s.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './App.module.css'\r\nimport {Header} from './components/Header/Header'\r\nimport {Navbar} from './components/Navbar/Navbar'\r\nimport {Profile} from './components/Profile/Profile'\r\nimport {Dialogs} from './components/Dialogs/Dialogs';\r\nimport {News} from './components/News/News';\r\nimport {Music} from './components/Music/Music';\r\nimport {Settings} from './components/Settings/Settings';\r\nimport {Route} from 'react-router-dom'\r\nimport {ActionsTypes, RootStateType} from './redux/state';\r\n\r\n\r\nexport type AppPropsType = {\r\n    state: RootStateType\r\n    dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\n\r\nfunction App(props: AppPropsType) {\r\n    return (\r\n        <div className={s.appWrapper}>\r\n            <Header/>\r\n            <Navbar/>\r\n            <div className={s.appWrapperContent}>\r\n                <Route exact path={'/profile'} render={() => <Profile\r\n                    stateProfilePage={props.state.profilePage}\r\n                    dispatch={props.dispatch}\r\n                    />}/>\r\n                <Route exact path={'/dialogs'} render={() => <Dialogs\r\n                    stateDialogsPage={props.state.dialogsPage}\r\n                    dispatch={props.dispatch}\r\n                    />}/>\r\n                <Route exact path=\"/news\" render={() => <News/>}/>\r\n                <Route exact path=\"/music\" render={() => <Music/>}/>\r\n                <Route exact path=\"/settings\" render={() => <Settings/>}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport {ActionsTypes, SidebarPageType} from './state';\r\n\r\nconst sidebarReduser = (state: SidebarPageType, action: ActionsTypes) => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReduser","import {v1} from 'uuid';\r\nimport profileReduser, {addPostActionCreator, updateNewPostTextActionCreator} from './profile-reduser';\r\nimport dialogsReduser, {addMessageActionCreator, updateNewMessageTextActionCreator} from './dialogs-reduser';\r\nimport sidebarReduser from './sidebar-reduser';\r\n\r\nexport type StoreType = {\r\n    _state: RootStateType\r\n    _callSubscriber: (state: RootStateType) => void\r\n    subscribe: (observer: () => void) => void\r\n    getState: () => RootStateType\r\n    dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\nexport type RootStateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n    sidebar: SidebarPageType\r\n\r\n}\r\nexport type SidebarPageType = {}\r\nexport type ProfilePageType = {\r\n    postsData: Array<PostType>\r\n    newPostText: string\r\n}\r\nexport type PostType = {\r\n    id?: string\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type DialogsPageType = {\r\n    dialogsData: Array<DialogItemType>\r\n    messagesData: Array<MessageItemType>\r\n    newMessageText: string\r\n}\r\nexport type MessageItemType = {\r\n    id?: string\r\n    messageContent: string\r\n}\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport type ActionsTypes =\r\n    ReturnType<typeof addPostActionCreator>\r\n    | ReturnType<typeof updateNewPostTextActionCreator>\r\n    | ReturnType<typeof addMessageActionCreator>\r\n    | ReturnType<typeof updateNewMessageTextActionCreator>\r\n\r\n\r\nexport const store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            postsData: [\r\n                {id: v1(), message: 'Hello', likesCount: 11},\r\n                {id: v1(), message: 'Buy', likesCount: 15},\r\n            ],\r\n            newPostText: ''\r\n        },\r\n        dialogsPage: {\r\n            dialogsData: [\r\n                {id: v1(), name: 'Marta'},\r\n                {id: v1(), name: 'Sasha'},\r\n                {id: v1(), name: 'Vera'},\r\n                {id: v1(), name: 'Anton'},\r\n                {id: v1(), name: 'Vanya'},\r\n            ],\r\n            messagesData: [\r\n                {id: v1(), messageContent: 'Hello'},\r\n                {id: v1(), messageContent: 'How are you?'},\r\n                {id: v1(), messageContent: 'Yo'},\r\n            ],\r\n            newMessageText: ''\r\n        },\r\n        sidebar: {}\r\n    },\r\n    _callSubscriber() {\r\n        console.log('state changed')\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n\r\n    dispatch(action) { //{type: 'ADD-POST'} --- объект, в котором есть свойство type со значением строка\r\n\r\n        this._state.profilePage = profileReduser(this._state.profilePage, action)\r\n        this._state.dialogsPage = dialogsReduser(this._state.dialogsPage, action)\r\n        this._state.sidebar = sidebarReduser(this._state.sidebar, action)\r\n\r\n        this._callSubscriber(this._state)\r\n\r\n\r\n        // if (action.type === ADD_POST) {\r\n        //     let newPost: PostType = {\r\n        //         id: v1(),\r\n        //         message: this._state.profilePage.newPostText,\r\n        //         likesCount: 0,\r\n        //     }\r\n        //     this._state.profilePage.postsData.push(newPost)\r\n        //     this._state.profilePage.newPostText = ''\r\n        //     this._callSubscriber()\r\n        // } else if (action.type === UPDATE_NEW_POST_TEXT) {\r\n        //     this._state.profilePage.newPostText = action.newText\r\n        //     this._callSubscriber()\r\n        // } else if (action.type === ADD_MESSAGE) {\r\n        //     const newMessage = {\r\n        //         id: v1(),\r\n        //         messageContent: this._state.dialogsPage.newMessageText,\r\n        //     }\r\n        //     this._state.dialogsPage.messagesData.push(newMessage)\r\n        //     this._state.dialogsPage.newMessageText = ''\r\n        //     this._callSubscriber()\r\n        // } else if (action.type === UPDATE_NEW_MESSAGE_TEXT) {\r\n        //     this._state.dialogsPage.newMessageText = action.newText\r\n        //     this._callSubscriber()\r\n        // }\r\n    }\r\n}\r\n\r\n//store OOP\r\n","import React from 'react'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport {RootStateType, store} from './redux/state';\r\n\r\nconst rerenderEntireTree = (state: RootStateType) => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <HashRouter>\r\n                <App\r\n                    state={state}\r\n                    dispatch={store.dispatch.bind(store)}\r\n                />\r\n            </HashRouter>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    )\r\n}\r\nrerenderEntireTree(store.getState())\r\nstore.subscribe(() => {\r\n    rerenderEntireTree(store.getState())\r\n})\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}