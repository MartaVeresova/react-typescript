{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","App.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Dialogs/Message/Message.module.css","reportWebVitals.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reduser.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/dialogs-reduser.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","App.tsx","redux/sidebar-reduser.tsx","redux/redux-store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","s","header","src","Navbar","nav","item","to","activeClassName","activeLink","active","ProfileInfo","profileInfo","descriptionBlock","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","postsData","id","v1","message","likesCount","newPostText","profileReduser","state","action","type","newPost","push","newText","Post","props","MyPostsContainer","connect","profilePage","dispatch","addPost","updateNewPostText","updateNewPostTextActionCreator","postsElements","map","p","onClickAddPost","myPosts","textarea","onChange","e","currentTarget","value","onKeyPress","key","button","onClick","Profile","profile","News","news","Music","music","Settings","settings","ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","dialogsData","name","messagesData","messageContent","newMessageText","dialogsReduser","newMessage","Message","DialogItem","path","DialogsContainer","stateDialogsPage","dialogsPage","addMessage","updateNewMessageText","updateNewMessageTextActionCreator","dialogsElements","d","messagesElements","m","onClickAddMessage","dialogs","dialogsItem","messagesItem","placeholder","App","appWrapper","appWrapperContent","exact","render","sidebarReduser","rootReducer","combineReducers","sidebar","store","createStore","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.f28391ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__6-fH1\",\"item\":\"Navbar_item__3Ldnh\",\"activeLink\":\"Navbar_activeLink__uFs2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Dn8Z\",\"dialogsItem\":\"Dialogs_dialogsItem__1NNkN\",\"textarea\":\"Dialogs_textarea__2IKdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1Sq30\",\"textarea\":\"MyPosts_textarea__1jrIv\",\"button\":\"MyPosts_button__3kRgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1upY6\",\"appWrapperContent\":\"App_appWrapperContent__1w-fS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__26XEX\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2MG0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__FOhNE\",\"activeLink\":\"DialogItem_activeLink__1OjsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__tmv2U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__395W3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1AFhw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__1E9ra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__P7Nrm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__hPAd8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1jjej\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport s from './Header.module.css'\r\n\r\nexport function Header() {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src='https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Logo_TV_2015.svg/1200px-Logo_TV_2015.svg.png'/>\r\n        </header>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Navbar.module.css'\r\n\r\nexport function Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nexport function ProfileInfo() {\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div>\r\n                <img\r\n                    src=\"https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300\"/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                ava+description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport {v1} from 'uuid';\r\nimport {ActionsTypes} from './store';\r\n\r\nexport const ADD_POST = 'ADD-POST'\r\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST}) as const\r\nexport const updateNewPostTextActionCreator = (newText: string) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText\r\n    } as const\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    postsData: Array<PostType>\r\n    newPostText: string\r\n}\r\nexport type PostType = {\r\n    id?: string\r\n    message: string\r\n    likesCount: number\r\n}\r\nconst initialState = {\r\n    postsData: [\r\n        {id: v1(), message: 'Hello', likesCount: 11},\r\n        {id: v1(), message: 'Buy', likesCount: 15},\r\n    ] as Array<PostType>,\r\n    newPostText: ''\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReduser = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost: PostType = {\r\n                id: v1(),\r\n                message: state.newPostText,\r\n                likesCount: 0,\r\n            }\r\n            state.postsData.push(newPost)\r\n            state.newPostText = ''\r\n            return state\r\n        case UPDATE_NEW_POST_TEXT:\r\n            state.newPostText = action.newText\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default profileReduser","import React from 'react'\r\nimport s from './Post.module.css'\r\nimport {PostType} from '../../../../redux/profile-reduser';\r\n\r\n\r\nexport function Post(props: PostType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://shapka-youtube.ru/wp-content/uploads/2021/02/prikolnaya-avatarka-dlya-patsanov.jpg\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {addPostActionCreator, PostType, updateNewPostTextActionCreator} from '../../../redux/profile-reduser';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    postsData: Array<PostType>\r\n    newPostText: string\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addPost: () => void\r\n    updateNewPostText: (newText: string) => void\r\n}\r\n\r\nexport type MyPostsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addPost: () => dispatch(addPostActionCreator()),\r\n        updateNewPostText: (newText: string) => dispatch(updateNewPostTextActionCreator(newText)),\r\n    }\r\n}\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport {Post} from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {MyPostsType} from './MyPostsContainer';\r\n\r\n\r\nexport function MyPosts(props: MyPostsType) {\r\n\r\n    const postsElements = props.postsData.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    const onClickAddPost = () => {\r\n        props.addPost()\r\n    }\r\n    const onKeyPressEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        (e.key === 'Enter') && onClickAddPost()\r\n    }\r\n    const onChangePost = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        debugger\r\n        props.updateNewPostText(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div className={s.textarea}>\r\n                    <textarea\r\n                        onChange={onChangePost}\r\n                        value={props.newPostText}\r\n                        onKeyPress={onKeyPressEnter}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button className={s.button} onClick={onClickAddPost}>\r\n                        Add post\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\r\n\r\nexport type ProfilePropsType = {\r\n\r\n}\r\n\r\n\r\nexport function Profile(props: ProfilePropsType) {\r\n\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\n\r\nexport function News() {\r\n    return (\r\n        <div className={s.news}>\r\n            News\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\n\r\nexport function Music() {\r\n    return (\r\n        <div className={s.music}>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div className={s.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {v1} from 'uuid';\r\nimport {ActionsTypes} from './store';\r\n\r\nexport const ADD_MESSAGE = 'ADD-MESSAGE'\r\nexport const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'\r\n\r\nexport const addMessageActionCreator = () => ({type: ADD_MESSAGE}) as const\r\nexport const updateNewMessageTextActionCreator = (newText: string) => ({\r\n    type: UPDATE_NEW_MESSAGE_TEXT,\r\n    newText: newText\r\n}) as const\r\n\r\nexport type DialogsPageType = {\r\n    dialogsData: Array<DialogItemType>\r\n    messagesData: Array<MessageItemType>\r\n    newMessageText: string\r\n}\r\nexport type MessageItemType = {\r\n    id?: string\r\n    messageContent: string\r\n}\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: v1(), name: 'Marta'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Vera'},\r\n        {id: v1(), name: 'Anton'},\r\n        {id: v1(), name: 'Vanya'},\r\n    ] as Array<DialogItemType>,\r\n    messagesData: [\r\n        {id: v1(), messageContent: 'Hello'},\r\n        {id: v1(), messageContent: 'How are you?'},\r\n        {id: v1(), messageContent: 'Yo'},\r\n    ] as Array<MessageItemType>,\r\n    newMessageText: ''\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsReduser = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessage = {\r\n                id: v1(),\r\n                messageContent: state.newMessageText,\r\n            }\r\n            state.messagesData.push(newMessage)\r\n            state.newMessageText = ''\r\n            return state\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            state.newMessageText = action.newText\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogsReduser","import React from 'react'\r\nimport s from './Message.module.css'\r\nimport {MessageItemType} from '../../../redux/dialogs-reduser';\r\n\r\n\r\nexport function Message(props: MessageItemType) {\r\n\r\n    return (\r\n        <div className={s.message}>{props.messageContent}</div>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './DialogItem.module.css'\r\nimport {DialogItemType} from '../../../redux/dialogs-reduser';\r\n\r\n\r\nexport function DialogItem(props: DialogItemType) {\r\n    const path = '/dialogs/' + props.id\r\n\r\n    return (\r\n        <div className={`${s.item} ${s.activeLink}`}>\r\n            <NavLink to={path}>\r\n                <img src=\"https://avatars.mds.yandex.net/get-pdb/1025945/a6f96698-c78d-44fb-b802-38e74e0164dd/s1200\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {\r\n    addMessageActionCreator,\r\n    InitialStateType,\r\n    updateNewMessageTextActionCreator\r\n} from '../../redux/dialogs-reduser';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    stateDialogsPage: InitialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: () => void\r\n    updateNewMessageText: (newText: string) => void\r\n}\r\nexport type DialogsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        stateDialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n\r\n    return {\r\n        addMessage: () => dispatch(addMessageActionCreator()),\r\n        updateNewMessageText: (newText: string) => dispatch(updateNewMessageTextActionCreator(newText)),\r\n    }\r\n}\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {Message} from './Message/Message';\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {DialogsType} from './DialogsContainer';\r\n\r\n\r\nexport function Dialogs(props: DialogsType) {\r\n    const dialogsElements = props.stateDialogsPage.dialogsData.map(d => <DialogItem\r\n        key={d.id} name={d.name}\r\n        id={d.id}/>)\r\n    const messagesElements = props.stateDialogsPage.messagesData.map(m => <Message\r\n        key={m.id}\r\n        messageContent={m.messageContent}/>)\r\n\r\n    const onClickAddMessage = () => {\r\n        props.addMessage()\r\n    }\r\n    const onKeyPressEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        (e.key === 'Enter') && onClickAddMessage()\r\n    }\r\n\r\n    const onChangeMessage = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.updateNewMessageText(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messagesItem}>\r\n                {messagesElements}\r\n                <div>\r\n                    <textarea\r\n                        placeholder=\"Enter your message\"\r\n                        className={s.textarea}\r\n                        onChange={onChangeMessage}\r\n                        value={props.stateDialogsPage.newMessageText}\r\n                        onKeyPress={onKeyPressEnter}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={onClickAddMessage}>Add message</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport {Header} from './components/Header/Header'\r\nimport {Navbar} from './components/Navbar/Navbar'\r\nimport {Profile} from './components/Profile/Profile'\r\nimport {News} from './components/News/News';\r\nimport {Music} from './components/Music/Music';\r\nimport {Settings} from './components/Settings/Settings';\r\nimport {Route} from 'react-router-dom'\r\nimport {DialogsContainer} from './components/Dialogs/DialogsContainer';\r\n\r\nexport type AppPropsType = {}\r\n\r\nfunction App(props: AppPropsType) {\r\n    return (\r\n        <div className={s.appWrapper}>\r\n            <Header/>\r\n            <Navbar/>\r\n            <div className={s.appWrapperContent}>\r\n                <Route exact path={'/profile'} render={() => <Profile/>}/>\r\n                <Route exact path={'/dialogs'} render={() => <DialogsContainer/>}/>\r\n                <Route exact path=\"/news\" render={() => <News/>}/>\r\n                <Route exact path=\"/music\" render={() => <Music/>}/>\r\n                <Route exact path=\"/settings\" render={() => <Settings/>}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport {ActionsTypes, SidebarPageType} from './store';\r\n\r\nconst initialState = {}\r\n\r\nconst sidebarReduser = (state: SidebarPageType = initialState, action: ActionsTypes) => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReduser","import {combineReducers, createStore} from 'redux';\r\nimport profileReduser from './profile-reduser';\r\nimport dialogsReduser from './dialogs-reduser';\r\nimport sidebarReduser from './sidebar-reduser';\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReduser,\r\n    dialogsPage: dialogsReduser,\r\n    sidebar: sidebarReduser,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer)","import React from 'react'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {Provider} from 'react-redux';\r\nimport {AppStateType, store} from './redux/redux-store';\r\n\r\n\r\nconst rerenderEntireTree = (state: AppStateType) => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <Provider store={store}>\r\n                    <App/>\r\n                </Provider>\r\n            </BrowserRouter>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    )\r\n}\r\nrerenderEntireTree(store.getState())\r\nstore.subscribe(() => {\r\n    rerenderEntireTree(store.getState())\r\n})\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}