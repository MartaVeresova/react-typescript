{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","App.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Dialogs/Message/Message.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.ts","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","redux/users-reducer.ts","assets/images/user.png","api/api.ts","components/Users/Users.tsx","assets/images/preloader.svg","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","assets/images/Logo_header.png","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","App.tsx","redux/sidebar-reducer.ts","redux/redux-store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","News","news","Music","music","Settings","settings","ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","initialState","dialogsData","id","v1","name","messagesData","messageContent","newMessageText","dialogsReducer","state","action","type","newText","Message","props","message","DialogItem","path","src","alt","DialogsContainer","connect","stateDialogsPage","dialogsPage","addMessage","updateNewMessageText","dialogsElements","map","d","messagesElements","m","onClickAddMessage","dialogs","dialogsItem","messagesItem","placeholder","textarea","onChange","e","currentTarget","value","onKeyPress","key","onClick","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","u","userId","followed","totalCount","filter","instance","axios","create","withCredentials","baseURL","headers","usersAPI","get","response","data","followAPI","post","unfollowAPI","delete","authAPI","userProfileAPI","Users","pagesCount","Math","ceil","pages","i","push","p","selectedPage","onPageChanged","photos","small","userPhoto","disabled","some","toggleIsFollowingProgress","resultCode","unfollow","follow","status","Preloader","preloader","UsersContainer","pageNumber","setCurrentPage","toggleIsFetching","setUsers","items","this","setTotalUsersCount","React","Component","usersPage","ProfileInfo","profile","profileInfo","descriptionBlock","large","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","postsData","likesCount","newPostText","profileReducer","Post","MyPostsContainer","profilePage","addPost","updateNewPostText","postsElements","onClickAddPost","myPosts","button","Profile","ProfileContainer","match","params","setUserProfile","WithUrlDataContainerComponent","withRouter","Header","header","LogoForHeader","loginBlock","isAuth","login","SET_USER_DATA","email","authReducer","HeaderContainer","setAuthUserData","auth","App","appWrapper","appWrapperContent","exact","render","sidebarReducer","rootReducer","combineReducers","sidebar","store","createStore","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00be3094.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Dn8Z\",\"dialogsItem\":\"Dialogs_dialogsItem__1NNkN\",\"textarea\":\"Dialogs_textarea__2IKdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__395W3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1Sq30\",\"textarea\":\"MyPosts_textarea__1jrIv\",\"button\":\"MyPosts_button__3kRgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1upY6\",\"appWrapperContent\":\"App_appWrapperContent__1w-fS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__FOhNE\",\"activeLink\":\"DialogItem_activeLink__1OjsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__Sr8R7\",\"selectedPage\":\"Users_selectedPage__3gyJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__26XEX\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2MG0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__tmv2U\",\"loginBlock\":\"Header_loginBlock__1H5dx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__1E9ra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__P7Nrm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__hPAd8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1jjej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1AFhw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__6-fH1\",\"item\":\"Navbar_item__3Ldnh\",\"activeLink\":\"Navbar_activeLink__uFs2O\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Navbar.module.css'\r\n\r\nexport function Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\n\r\nexport function News() {\r\n    return (\r\n        <div className={s.news}>\r\n            News\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\n\r\nexport function Music() {\r\n    return (\r\n        <div className={s.music}>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div className={s.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import {v1} from 'uuid';\r\nimport {ActionsTypes} from './store';\r\n\r\nexport const ADD_MESSAGE = 'ADD-MESSAGE'\r\nexport const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'\r\n\r\nexport const addMessage = () => ({type: ADD_MESSAGE})\r\nexport const updateNewMessageText = (newText: string) => ({\r\n    type: UPDATE_NEW_MESSAGE_TEXT,\r\n    newText: newText\r\n})\r\n\r\nexport type DialogsPageType = {\r\n    dialogsData: Array<DialogItemType>\r\n    messagesData: Array<MessageItemType>\r\n    newMessageText: string\r\n}\r\nexport type MessageItemType = {\r\n    id?: string\r\n    messageContent: string\r\n}\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: v1(), name: 'Marta'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Vera'},\r\n        {id: v1(), name: 'Anton'},\r\n        {id: v1(), name: 'Vanya'},\r\n    ] as Array<DialogItemType>,\r\n    messagesData: [\r\n        {id: v1(), messageContent: 'Hello'},\r\n        {id: v1(), messageContent: 'How are you?'},\r\n        {id: v1(), messageContent: 'Yo'},\r\n    ] as Array<MessageItemType>,\r\n    newMessageText: ''\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                newMessageText: '',\r\n                messagesData: [\r\n                    ...state.messagesData,\r\n                    {id: v1(), messageContent: state.newMessageText}\r\n                ],\r\n            }\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogsReducer","import React from 'react'\r\nimport s from './Message.module.css'\r\nimport {MessageItemType} from '../../../redux/dialogs-reducer';\r\n\r\n\r\nexport function Message(props: MessageItemType) {\r\n\r\n    return (\r\n        <div className={s.message}>{props.messageContent}</div>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './DialogItem.module.css'\r\nimport {DialogItemType} from '../../../redux/dialogs-reducer';\r\n\r\n\r\nexport function DialogItem(props: DialogItemType) {\r\n    const path = '/dialogs/' + props.id\r\n\r\n    return (\r\n        <div className={`${s.item} ${s.activeLink}`}>\r\n            <NavLink to={path}>\r\n                <img src=\"https://avatars.mds.yandex.net/get-pdb/1025945/a6f96698-c78d-44fb-b802-38e74e0164dd/s1200\" alt={''}/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","import {addMessage, InitialStateType, updateNewMessageText} from '../../redux/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    stateDialogsPage: InitialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: () => void\r\n    updateNewMessageText: (newText: string) => void\r\n}\r\nexport type DialogsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        stateDialogsPage: state.dialogsPage\r\n    }\r\n}\r\n// const mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n//\r\n//     return {\r\n//         addMessage: () => dispatch(addMessageActionCreator()),\r\n//         updateNewMessageText: (newText: string) => dispatch(updateNewMessageTextActionCreator(newText)),\r\n//     }\r\n// }\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, {\r\n    addMessage,\r\n    updateNewMessageText,\r\n})(Dialogs)\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {Message} from './Message/Message';\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {DialogsType} from './DialogsContainer';\r\n\r\n\r\nexport function Dialogs(props: DialogsType) {\r\n    const dialogsElements = props.stateDialogsPage.dialogsData.map(d => <DialogItem\r\n        key={d.id} name={d.name}\r\n        id={d.id}/>)\r\n    const messagesElements = props.stateDialogsPage.messagesData.map(m => <Message\r\n        key={m.id}\r\n        messageContent={m.messageContent}/>)\r\n\r\n    const onClickAddMessage = () => {\r\n        props.addMessage()\r\n    }\r\n    const onKeyPressEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        (e.key === 'Enter') && onClickAddMessage()\r\n    }\r\n\r\n    const onChangeMessage = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.updateNewMessageText(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messagesItem}>\r\n                {messagesElements}\r\n                <div>\r\n                    <textarea\r\n                        placeholder=\"Enter your message\"\r\n                        className={s.textarea}\r\n                        onChange={onChangeMessage}\r\n                        value={props.stateDialogsPage.newMessageText}\r\n                        onKeyPress={onKeyPressEnter}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={onClickAddMessage}>Add message</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {ActionsTypes} from './store';\r\n\r\nexport const FOLLOW = 'FOLLOW'\r\nexport const UNFOLLOW = 'UNFOLLOW'\r\nexport const SET_USERS = 'SET-USERS'\r\nexport const SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nexport const SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS'\r\n\r\nexport const follow = (userId: string) => ({type: FOLLOW, userId}) as const\r\nexport const unfollow = (userId: string) => ({type: UNFOLLOW, userId}) as const\r\nexport const setUsers = (users: Array<UsersType>) => ({type: SET_USERS, users}) as const\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage}) as const\r\nexport const setTotalUsersCount = (totalCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalCount\r\n}) as const\r\nexport const toggleIsFetching = (isFetching: boolean) => ({\r\n    type: TOGGLE_IS_FETCHING, isFetching\r\n}) as const\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: string) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId\r\n}) as const\r\n\r\n\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\ntype PhotoType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UsersType = {\r\n    id: string\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location?: LocationType\r\n    photos: PhotoType\r\n}\r\ntype InitialStateType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\nconst initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: ['2', '3'],\r\n}\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: true} : u)\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: false} : u)\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress:\r\n                    action.isFetching\r\n                        ? [...state.followingInProgress, action.userId]\r\n                        : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/user.4409fc97.png\";","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '56cc9d09-6ac5-48a7-98d1-6f7ea21ef704',\r\n    },\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const followAPI = {\r\n    followUsers(id: string) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollowAPI = {\r\n    unfollowUsers(id: string) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\nexport const authAPI = {\r\n    getAuthHeader() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const userProfileAPI = {\r\n    getUserProfile(userId: string) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport s from './Users.module.css';\r\nimport {UsersType} from '../../redux/users-reducer';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {followAPI, unfollowAPI} from '../../api/api';\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UsersType>\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    followingInProgress: string[]\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: string) => void\r\n}\r\n\r\nexport function Users(props: UsersPropsType) {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => {\r\n                    return <span className={props.currentPage === p ? s.selectedPage : ''}\r\n                                 onClick={(e) => props.onPageChanged(p)}>{p}</span>\r\n                })}\r\n            </div>\r\n            {\r\n                props.users.map(u => {\r\n                        const onClickFollow = () => {\r\n                            props.toggleIsFollowingProgress(true, u.id)\r\n\r\n                            followAPI.followUsers(u.id)\r\n                                .then(data => {\r\n                                    if (data.resultCode === 0) {\r\n                                        props.follow(u.id)\r\n                                    }\r\n                                    props.toggleIsFollowingProgress(false, u.id)\r\n                                })\r\n                        }\r\n                        const onClickUnFollow = () => {\r\n                            props.toggleIsFollowingProgress(true, u.id)\r\n                            unfollowAPI.unfollowUsers(u.id)\r\n                                .then(data => {\r\n                                    if (data.resultCode === 0) {\r\n                                        props.unfollow(u.id)\r\n                                    }\r\n                                    props.toggleIsFollowingProgress(false, u.id)\r\n                                })\r\n                        }\r\n\r\n                        return (\r\n                            <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                <img src={u.photos.small !== null ? u.photos.small : userPhoto}\r\n                                     className={s.userPhoto} alt={''}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed\r\n                                ?\r\n                                <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={onClickUnFollow}>unFollow</button>\r\n                                : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                          onClick={onClickFollow}>follow</button>}\r\n                        </div>\r\n                    </span>\r\n                                <span>\r\n                        <div>\r\n                            {u.name}\r\n                        </div>\r\n                        <div>\r\n                            {u.status}\r\n                        </div>\r\n                    </span>\r\n                                <span>\r\n                            <div>{'u.location.country'}</div>\r\n                            <div>{'u.location.city'}</div>\r\n                    </span>\r\n                            </div>\r\n                        )\r\n                    })\r\n            }\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/preloader.5665744c.svg\";","import preloader from '../../../assets/images/preloader.svg';\r\nimport React from 'react';\r\n\r\nexport function Preloader() {\r\n    return <>\r\n        <img src={preloader} alt={''}/>\r\n    </>\r\n}","import {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFetching,\r\n    toggleIsFollowingProgress,\r\n    unfollow,\r\n    UsersType\r\n} from '../../redux/users-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport React from 'react';\r\nimport {Users} from './Users';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport {usersAPI} from '../../api/api';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\ntype MapDispatchToPropsType = {\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: string) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n\r\n        usersAPI.getUsers(this.props.currentPage, this.props.pageSize)\r\n            .then(data => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(data.items)\r\n                this.props.setTotalUsersCount(data.totalCount)\r\n            })\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.toggleIsFetching(true)\r\n\r\n        usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n            .then(data => {\r\n                this.props.setUsers(data.items)\r\n                this.props.toggleIsFetching(false)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n                toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n//     return {\r\n//         follow: (userId: string) => dispatch(followAC(userId)),\r\n//         unFollow: (userId: string) => dispatch(unFollowAC(userId)),\r\n//         setUsers: (users: Array<UsersType>) => dispatch(setUsersAC(users)),\r\n//         setCurrentPage: (currentPage: number) => dispatch(setCurrentPageAC(currentPage)),\r\n//         setTotalUsersCount: (totalCount: number) => dispatch(setTotalUsersCountAC(totalCount)),\r\n//         toggleIsFetching: (isFetching: boolean) => dispatch(toggleIsFetchingAC(isFetching)),\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleIsFetching,\r\n    toggleIsFollowingProgress,\r\n})(UsersContainer)","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport {ProfileType} from '../../../redux/profile-reducer';\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\n\r\ntype PropsType= {\r\n    profile: ProfileType | null\r\n}\r\nexport function ProfileInfo(props: PropsType) {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div>\r\n                <img\r\n                    src='https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300' alt={''}/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img\r\n                    src={props.profile.photos.large} alt={''}/>\r\n                ava+description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {v1} from 'uuid';\r\nimport {ActionsTypes} from './store';\r\n\r\nexport const ADD_POST = 'ADD-POST'\r\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nexport const SET_USER_PROFILE = 'SET-USER-PROFILE'\r\n\r\nexport const addPost = () => ({type: ADD_POST}) as const\r\nexport const updateNewPostText = (newText: string) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: newText,\r\n    } as const\r\n}\r\nexport const setUserProfile = (profile: ProfileType) => ({type: SET_USER_PROFILE, profile}) as const\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: ProfileContactsType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: PhotoType\r\n}\r\ntype ProfileContactsType = {\r\n    facebook: string\r\n    website: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n    mainLink: string\r\n}\r\ntype PhotoType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nconst initialState = {\r\n    postsData: [\r\n        {id: v1(), message: 'Hello', likesCount: 11},\r\n        {id: v1(), message: 'Buy', likesCount: 15},\r\n    ] as Array<PostType>,\r\n    newPostText: '',\r\n    profile: null as ProfileType | null,\r\n}\r\n\r\nexport type InitialStateType = {\r\n    postsData: Array<PostType>\r\n    newPostText: string\r\n    profile: ProfileType | null,\r\n}\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                newPostText: '',\r\n                postsData: [\r\n                    ...state.postsData,\r\n                    {id: v1(), message: state.newPostText, likesCount: 0}\r\n                ],\r\n            }\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default profileReducer","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport function Post(props: PropsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://shapka-youtube.ru/wp-content/uploads/2021/02/prikolnaya-avatarka-dlya-patsanov.jpg\" alt={''}/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {addPost, PostType, updateNewPostText} from '../../../redux/profile-reducer';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\n\r\n\r\nexport type MapStateToPropsType = {\r\n    postsData: Array<PostType>\r\n    newPostText: string\r\n}\r\n\r\nexport type MapDispatchToPropsType = {\r\n    addPost: () => void\r\n    updateNewPostText: (newText: string) => void\r\n}\r\n\r\nexport type MyPostsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n// const mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n//     return {\r\n//         addPost: () => dispatch(addPostActionCreator()),\r\n//         updateNewPostText: (newText: string) => dispatch(updateNewPostTextActionCreator(newText)),\r\n//     }\r\n// }\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n    updateNewPostText,\r\n})(MyPosts)\r\n\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport {Post} from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {MyPostsType} from './MyPostsContainer';\r\n\r\n\r\n\r\nexport function MyPosts(props: MyPostsType) {\r\n\r\n    const postsElements = props.postsData.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    const onClickAddPost = () => {\r\n        props.addPost()\r\n    }\r\n    const onKeyPressEnter = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        (e.key === 'Enter') && onClickAddPost()\r\n    }\r\n    const onChangePost = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.updateNewPostText(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div className={s.textarea}>\r\n                    <textarea\r\n                        onChange={onChangePost}\r\n                        value={props.newPostText}\r\n                        onKeyPress={onKeyPressEnter}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button className={s.button} onClick={onClickAddPost}>\r\n                        Add post\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\r\nimport {ProfileType} from '../../redux/profile-reducer';\r\n\r\ntype PropsType= {\r\n    profile: ProfileType | null\r\n}\r\nexport function Profile(props: PropsType) {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile={props.profile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport {Profile} from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {ProfileType, setUserProfile} from '../../redux/profile-reducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {userProfileAPI} from '../../api/api';\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType | null\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setUserProfile: (profile: ProfileType) => void\r\n}\r\nexport type ProfilePropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = '2'\r\n        }\r\n        userProfileAPI.getUserProfile(userId)\r\n            .then(data => {\r\n                this.props.setUserProfile(data)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.profile}>\r\n                <Profile profile={this.props.profile}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    profile: state.profilePage.profile\r\n})\r\nconst WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, {setUserProfile})(WithUrlDataContainerComponent)\r\n\r\n","export default __webpack_public_path__ + \"static/media/Logo_header.8aaf41b6.png\";","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css'\r\nimport LogoForHeader from '../../assets/images/Logo_header.png';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nexport function Header(props: PropsType) {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src={LogoForHeader} alt={''}/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? props.login : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}","import {ActionsTypes} from './store';\r\n\r\nexport const SET_USER_DATA = 'SET-USER-DATA'\r\n\r\nexport const setAuthUserData = (userId: number, email: string, login: string) => ({\r\n    type: SET_USER_DATA,\r\n    data: {userId, email, login}\r\n}) as const\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","import React from 'react'\r\nimport {Header} from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {setAuthUserData} from '../../redux/auth-reducer';\r\nimport {authAPI} from '../../api/api';\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    setAuthUserData: (userId: number, email: string, login: string) => void\r\n}\r\n\r\nexport type HeaderPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderPropsType> {\r\n\r\n    componentDidMount() {\r\n        authAPI.getAuthHeader()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let {id, email, login} = data.data\r\n                    this.props.setAuthUserData(id, email, login)\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData})(HeaderContainer)","import React from 'react'\r\nimport s from './App.module.css'\r\nimport {Navbar} from './components/Navbar/Navbar'\r\nimport {News} from './components/News/News';\r\nimport {Music} from './components/Music/Music';\r\nimport {Settings} from './components/Settings/Settings';\r\nimport {Route} from 'react-router-dom'\r\nimport {DialogsContainer} from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.appWrapper}>\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className={s.appWrapperContent}>\r\n                <Route exact path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                <Route exact path=\"/dialogs\" render={() => <DialogsContainer/>}/>\r\n                <Route exact path=\"/users\" render={() => <UsersContainer/>}/>\r\n                <Route exact path=\"/news\" render={() => <News/>}/>\r\n                <Route exact path=\"/music\" render={() => <Music/>}/>\r\n                <Route exact path=\"/settings\" render={() => <Settings/>}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import {ActionsTypes, SidebarPageType} from './store';\r\n\r\nconst initialState = {}\r\n\r\nconst sidebarReducer = (state: SidebarPageType = initialState, action: ActionsTypes) => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","import {combineReducers, createStore} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer)\r\n\r\n\r\ndeclare global {\r\n    interface Window {\r\n        store: any;\r\n    }\r\n}\r\nwindow.store = store\r\n","import React from 'react'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './redux/redux-store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}