{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","module","exports","Message","messageContent","className","s","message","DialogItem","id","name","path","item","activeLink","src","alt","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","textarea","placeholder","component","Textarea","validate","requiredField","DialogsContainer","compose","stateDialogsPage","dialogsPage","addMessage","dialogsElements","dialogsData","map","d","messagesElements","messagesData","m","dialogs","dialogsItem","messagesItem","formData","newMessageText"],"mappings":"qMASMA,EAAkB,SAACC,GAAD,MAA+C,CACnEC,OAAQD,EAAME,KAAKD,SAGhB,SAASE,EAAoBC,GAUhC,OADiCC,YAAQN,EAARM,EAPP,SAACC,GAAgC,IAClDL,EAAwBK,EAAxBL,OAAWM,EADsC,YACzBD,EADyB,YAEtD,OAAKL,EAEE,cAACG,EAAD,eAAeG,IAFF,cAAC,IAAD,CAAUC,GAAI,gB,oBChB1CC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,4B,oBCA3GD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,iC,wJCIlDC,EAA+B,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAE1C,OACI,qBAAKC,UAAWC,IAAEC,QAAlB,SAA4BH,K,0BCFvBI,EAAiC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KAC1CC,EAAO,YAAcF,EAE3B,OACI,qBAAKJ,UAAS,UAAKC,IAAEM,KAAP,YAAeN,IAAEO,YAA/B,SACI,eAAC,IAAD,CAASb,GAAIW,EAAb,UACI,qBAAKG,IAAI,4FAA4FC,IAAK,KACzGL,Q,kCCNXM,EAAcC,YAAiB,ICgC/BC,EAAsBC,YAAwB,CAACC,KAAM,kBAA/BD,ED7BuC,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aACjE,OACI,uBAAMC,SAAUD,EAAhB,UACI,8BACI,cAACE,EAAA,EAAD,CACIlB,UAAWC,IAAEkB,SACbC,YAAY,qBACZf,KAAK,iBACLgB,UAAWC,IACXC,SAAU,CAACC,IAAeb,OAGlC,8BACI,yD,yBERHc,EAAmBC,YAC5BlC,aAPoB,SAACL,GACrB,MAAO,CACHwC,iBAAkBxC,EAAMyC,eAKH,CAACC,iBAC1BvC,IAF4BoC,EDNQ,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,iBAAkBE,EAAgB,EAAhBA,WAElDC,EAAkBH,EAAiBI,YAAYC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAC/C5B,KAAM4B,EAAE5B,KACnBD,GAAI6B,EAAE7B,IADD6B,EAAE7B,OAEL8B,EAAmBP,EAAiBQ,aAAaH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAE5DrC,eAAgBqC,EAAErC,gBADbqC,EAAEhC,OASX,OACI,sBAAKJ,UAAWC,IAAEoC,QAAlB,UACI,qBAAKrC,UAAWC,IAAEqC,YAAlB,SACKR,IAGL,sBAAK9B,UAAWC,IAAEsC,aAAlB,UACKL,EACD,cAACrB,EAAD,CAAqBI,SAbP,SAACuB,GACvBX,EAAWW,EAASC","file":"static/js/4.0fb4fa27.chunk.js","sourcesContent":["import React, {ComponentType} from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../redux/store';\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Dn8Z\",\"dialogsItem\":\"Dialogs_dialogsItem__1NNkN\",\"textarea\":\"Dialogs_textarea__2IKdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1jjej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__FOhNE\",\"activeLink\":\"DialogItem_activeLink__1OjsT\"};","import React, {FC} from 'react'\r\nimport s from './Message.module.css'\r\nimport {MessageItemType} from '../../../redux/dialogs-reducer';\r\n\r\n\r\nexport const Message: FC<MessageItemType> = ({messageContent}) => {\r\n\r\n    return (\r\n        <div className={s.message}>{messageContent}</div>\r\n    )\r\n}","import React, {FC} from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './DialogItem.module.css'\r\nimport {DialogItemType} from '../../../redux/dialogs-reducer';\r\n\r\n\r\nexport const DialogItem: FC<DialogItemType> = ({id, name}) => {\r\n    const path = '/dialogs/' + id\r\n\r\n    return (\r\n        <div className={`${s.item} ${s.activeLink}`}>\r\n            <NavLink to={path}>\r\n                <img src=\"https://avatars.mds.yandex.net/get-pdb/1025945/a6f96698-c78d-44fb-b802-38e74e0164dd/s1200\" alt={''}/>\r\n                {name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","import {maxLengthCreator, requiredField} from '../../../utils/validators/validators';\r\nimport React, {FC} from 'react';\r\nimport {Field, InjectedFormProps} from 'redux-form';\r\nimport s from '../Dialogs.module.css';\r\nimport {Textarea} from '../../common/formsControls/FormsControls';\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\n\r\nexport const AddMessageForm: FC<InjectedFormProps<FormDataType>> = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    className={s.textarea}\r\n                    placeholder='Enter your message'\r\n                    name='newMessageText'\r\n                    component={Textarea}\r\n                    validate={[requiredField, maxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n//types\r\nexport type FormDataType = {\r\n    newMessageText: string\r\n}","import React, {FC} from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {Message} from './Message/Message';\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {DialogsType} from './DialogsContainer';\r\nimport {reduxForm} from 'redux-form';\r\nimport {AddMessageForm, FormDataType} from './Message/AddMessageForm';\r\n\r\n\r\nexport const Dialogs: FC<DialogsType> = ({stateDialogsPage, addMessage}) => {\r\n\r\n    const dialogsElements = stateDialogsPage.dialogsData.map(d => <DialogItem\r\n        key={d.id} name={d.name}\r\n        id={d.id}/>)\r\n    const messagesElements = stateDialogsPage.messagesData.map(m => <Message\r\n        key={m.id}\r\n        messageContent={m.messageContent}/>)\r\n\r\n\r\n    const onClickAddMessage = (formData: FormDataType) => {\r\n        addMessage(formData.newMessageText)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messagesItem}>\r\n                {messagesElements}\r\n                <AddMessageReduxForm onSubmit={onClickAddMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst AddMessageReduxForm = reduxForm<FormDataType>({form: 'addMessageForm'})(AddMessageForm)","import {addMessage, InitialStateType} from '../../redux/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/store';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {ComponentType} from 'react';\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        stateDialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = compose<ComponentType>(\r\n    connect(mapStateToProps, {addMessage,}),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n//types\r\ntype MapStateToPropsType = {\r\n    stateDialogsPage: InitialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: (newMessageText: string) => void\r\n}\r\nexport type DialogsType = MapStateToPropsType & MapDispatchToPropsType"],"sourceRoot":""}