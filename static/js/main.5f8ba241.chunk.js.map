{"version":3,"sources":["components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Dialogs/Message/Message.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.ts","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","utils/validators/validators.tsx","components/common/formsControls/FormsControls.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","api/api.ts","redux/users-reducer.ts","assets/images/user.png","components/Users/Users.tsx","assets/images/preloader.svg","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","assets/images/Logo_header.png","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","redux/sidebar-reducer.ts","redux/redux-store.ts","index.tsx","components/Dialogs/Dialogs.module.css","components/common/formsControls/FormsControls.module.css","components/Profile/Profile.module.css","App.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","News","news","Music","music","Settings","settings","ADD_MESSAGE","initialState","dialogsData","id","v1","name","messagesData","messageContent","dialogsReducer","state","action","type","newMessageText","Message","props","message","DialogItem","path","src","alt","requiredField","value","maxLengthCreator","maxLength","length","Textarea","input","meta","restProps","hasError","touched","error","formControl","maxLength50","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","textarea","placeholder","component","validate","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","DialogsContainer","compose","stateDialogsPage","dialogsPage","addMessage","dialogsElements","map","d","messagesElements","m","dialogs","dialogsItem","messagesItem","formData","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","res","data","userId","post","delete","profileAPI","status","put","authAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleIsFollowingProgress","usersReducer","u","followed","totalCount","filter","Users","pagesCount","Math","ceil","pages","i","push","p","selectedPage","onClick","e","onPageChanged","photos","small","userPhoto","disabled","some","unfollow","follow","Preloader","preloader","UsersContainer","pageNumber","getUsers","this","React","usersPage","dispatch","a","resultCode","setCurrentPage","items","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","updateUserStatus","onStatusChange","currentTarget","prevProps","prevState","onDoubleClick","onBlur","autoFocus","onChange","ProfileInfo","profile","profileInfo","descriptionBlock","large","ADD_POST","SET_USER_PROFILE","SET_STATUS","postsData","likesCount","setStatus","profileReducer","newPostText","Post","maxLength10","AddPostReduxForm","button","MyPostsContainer","profilePage","addPost","postsElements","myPosts","Profile","ProfileContainer","match","params","getUserProfile","getUserStatus","withRouter","Header","header","LogoForHeader","loginBlock","login","SET_USER_DATA","email","setAuthUserData","authReducer","HeaderContainer","getAuthUserData","Login","LoginReduxForm","console","log","App","appWrapper","appWrapperContent","exact","render","sidebarReducer","rootReducer","combineReducers","sidebar","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f8ba241.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__1E9ra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__P7Nrm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__hPAd8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1jjej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1AFhw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__6-fH1\",\"item\":\"Navbar_item__3Ldnh\",\"activeLink\":\"Navbar_activeLink__uFs2O\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Navbar.module.css'\r\n\r\nexport function Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\n\r\nexport function News() {\r\n    return (\r\n        <div className={s.news}>\r\n            News\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\n\r\nexport function Music() {\r\n    return (\r\n        <div className={s.music}>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div className={s.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import {v1} from 'uuid';\r\n\r\nexport const ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\nexport type AddMessageActionType = ReturnType<typeof addMessage>\r\nexport type DialogsActionsType = AddMessageActionType\r\n\r\nexport type DialogsPageType = {\r\n    dialogsData: Array<DialogItemType>\r\n    messagesData: Array<MessageItemType>\r\n    newMessageText: string\r\n}\r\nexport type MessageItemType = {\r\n    id?: string\r\n    messageContent: string\r\n}\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: v1(), name: 'Marta'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Vera'},\r\n        {id: v1(), name: 'Anton'},\r\n        {id: v1(), name: 'Vanya'},\r\n    ] as Array<DialogItemType>,\r\n    messagesData: [\r\n        {id: v1(), messageContent: 'Hello'},\r\n        {id: v1(), messageContent: 'How are you?'},\r\n        {id: v1(), messageContent: 'Yo'},\r\n    ] as Array<MessageItemType>,\r\n    // newMessageText: ''\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: DialogsActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messagesData: [\r\n                    ...state.messagesData,\r\n                    {id: v1(), messageContent: action.newMessageText}\r\n                ],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addMessage = (newMessageText: string) => ({type: ADD_MESSAGE, newMessageText}) as const\r\n\r\n\r\nexport default dialogsReducer","import React from 'react'\r\nimport s from './Message.module.css'\r\nimport {MessageItemType} from '../../../redux/dialogs-reducer';\r\n\r\n\r\nexport function Message(props: MessageItemType) {\r\n\r\n    return (\r\n        <div className={s.message}>{props.messageContent}</div>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './DialogItem.module.css'\r\nimport {DialogItemType} from '../../../redux/dialogs-reducer';\r\n\r\n\r\nexport function DialogItem(props: DialogItemType) {\r\n    const path = '/dialogs/' + props.id\r\n\r\n    return (\r\n        <div className={`${s.item} ${s.activeLink}`}>\r\n            <NavLink to={path}>\r\n                <img src=\"https://avatars.mds.yandex.net/get-pdb/1025945/a6f96698-c78d-44fb-b802-38e74e0164dd/s1200\" alt={''}/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","export const requiredField = (value: string) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n","import React from 'react'\r\nimport {WrappedFieldProps} from 'redux-form/lib/Field';\r\nimport s from './FormsControls.module.css'\r\n\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={s.formControl + '' + (hasError ? s.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...restProps}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={s.formControl + '' + (hasError ? s.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...restProps}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {Message} from './Message/Message';\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {DialogsType} from './DialogsContainer';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, requiredField} from '../../utils/validators/validators';\r\nimport {Textarea} from '../common/formsControls/FormsControls';\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nexport function Dialogs(props: DialogsType) {\r\n\r\n    const dialogsElements = props.stateDialogsPage.dialogsData.map(d => <DialogItem\r\n        key={d.id} name={d.name}\r\n        id={d.id}/>)\r\n    const messagesElements = props.stateDialogsPage.messagesData.map(m => <Message\r\n        key={m.id}\r\n        messageContent={m.messageContent}/>)\r\n\r\n\r\n    const onClickAddMessage = (formData: FormDataType) => {\r\n        props.addMessage(formData.newMessageText)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messagesItem}>\r\n                {messagesElements}\r\n                <AddMessageReduxForm onSubmit={onClickAddMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype FormDataType = {\r\n    newMessageText: string\r\n}\r\n\r\nexport const AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    className={s.textarea}\r\n                    placeholder=\"Enter your message\"\r\n                    name=\"newMessageText\"\r\n                    component={Textarea}\r\n                    validate={[requiredField, maxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm<FormDataType>({form: 'addMessageForm'})(AddMessageForm)","import React, {ComponentType} from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../redux/redux-store';\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}","import {addMessage, InitialStateType} from '../../redux/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {ComponentType} from 'react';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    stateDialogsPage: InitialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: (newMessageText: string) => void\r\n}\r\nexport type DialogsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        stateDialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = compose<ComponentType>(\r\n    connect(mapStateToProps, {addMessage,}),\r\n    withAuthRedirect\r\n)(Dialogs)","import axios from 'axios';\r\nimport {ProfileType} from '../redux/profile-reducer';\r\nimport {UsersType} from '../redux/users-reducer';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '56cc9d09-6ac5-48a7-98d1-6f7ea21ef704',\r\n    },\r\n})\r\n\r\n\r\ntype GetUsersType = {\r\n    items: UsersType[]\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\ntype CommonResponseType<T = {}> = {\r\n    resultCode: number\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    data: T\r\n}\r\n\r\ntype GetAuthUserData = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get<GetUsersType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data)\r\n    },\r\n    followUsers(userId: string) {\r\n        return instance.post<CommonResponseType>(`follow/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n    unfollowUsers(userId: string) {\r\n        return instance.delete<CommonResponseType>(`follow/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get<string>(`/profile/status/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<CommonResponseType>(`/profile/status`, {status})\r\n            .then(res => res.data)\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<CommonResponseType<GetAuthUserData>>(`auth/me`)\r\n            .then(res => res.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean, captcha: boolean) {\r\n        return instance.post<CommonResponseType<{ userId: string }>>(`/auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n            .then(res => res.data)\r\n    }\r\n}\r\n","import {usersAPI} from '../api/api';\r\nimport {AppThunk} from './redux-store';\r\n\r\nexport const FOLLOW = 'FOLLOW'\r\nexport const UNFOLLOW = 'UNFOLLOW'\r\nexport const SET_USERS = 'SET-USERS'\r\nexport const SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nexport const SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS'\r\n\r\nexport type FollowSuccessActionType = ReturnType<typeof followSuccess>\r\nexport type UnfollowSuccessActionType = ReturnType<typeof unfollowSuccess>\r\nexport type SetUsersActionType = ReturnType<typeof setUsers>\r\nexport type SetCurrentPageActionType = ReturnType<typeof setCurrentPage>\r\nexport type SetTotalUsersCountActionType = ReturnType<typeof setTotalUsersCount>\r\nexport type ToggleIsFetchingActionType = ReturnType<typeof toggleIsFetching>\r\nexport type ToggleIsFollowingProgressActionType = ReturnType<typeof toggleIsFollowingProgress>\r\n\r\nexport type UsersActionsType =\r\n    FollowSuccessActionType\r\n    | UnfollowSuccessActionType\r\n    | SetUsersActionType\r\n    | SetCurrentPageActionType\r\n    | SetTotalUsersCountActionType\r\n    | ToggleIsFetchingActionType\r\n    | ToggleIsFollowingProgressActionType\r\n\r\nexport type UsersType = {\r\n    id: string\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    uniqueUrlName: string | null\r\n    location?: {\r\n        city: string\r\n        country: string\r\n    }\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\ntype InitialStateType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\nconst initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: UsersActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: true} : u)\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: false} : u)\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress:\r\n                    action.isFetching\r\n                        ? [...state.followingInProgress, action.userId]\r\n                        : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId: string) => ({type: FOLLOW, userId}) as const\r\nexport const unfollowSuccess = (userId: string) => ({type: UNFOLLOW, userId}) as const\r\nexport const setUsers = (users: Array<UsersType>) => ({type: SET_USERS, users}) as const\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage}) as const\r\nexport const setTotalUsersCount = (totalCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalCount\r\n}) as const\r\nexport const toggleIsFetching = (isFetching: boolean) => ({\r\n    type: TOGGLE_IS_FETCHING, isFetching\r\n}) as const\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: string) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId\r\n}) as const\r\n\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number): AppThunk => async dispatch => {\r\n    dispatch(toggleIsFetching(true))\r\n    const data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n}\r\n\r\nexport const follow = (userId: string): AppThunk => async dispatch => {\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n    const data = await usersAPI.followUsers(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(followSuccess(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\n\r\nexport const unfollow = (userId: string): AppThunk => async dispatch => {\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n    const data = await usersAPI.unfollowUsers(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(unfollowSuccess(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\n\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/user.4409fc97.png\";","import React from 'react';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport s from './Users.module.css';\r\nimport {UsersType} from '../../redux/users-reducer';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UsersType>\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    followingInProgress: string[]\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: string) => void\r\n}\r\n\r\nexport function Users(props: UsersPropsType) {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => {\r\n                    return <span className={props.currentPage === p ? s.selectedPage : ''}\r\n                                 onClick={(e) => props.onPageChanged(p)}>{p}</span>\r\n                })}\r\n            </div>\r\n            {\r\n                props.users.map(u => {\r\n                    const onClickFollow = () => props.follow(u.id)\r\n                    // props.toggleIsFollowingProgress(true, u.id)\r\n                    //\r\n                    // followAPI.followUsers(u.id)\r\n                    //     .then(data => {\r\n                    //         if (data.resultCode === 0) {\r\n                    //             props.follow(u.id)\r\n                    //         }\r\n                    //         props.toggleIsFollowingProgress(false, u.id)\r\n                    //     })\r\n\r\n                    const onClickUnFollow = () => props.unfollow(u.id)\r\n                    // props.toggleIsFollowingProgress(true, u.id)\r\n                    // unfollowAPI.unfollowUsers(u.id)\r\n                    //     .then(data => {\r\n                    //         if (data.resultCode === 0) {\r\n                    //             props.unfollow(u.id)\r\n                    //         }\r\n                    //         props.toggleIsFollowingProgress(false, u.id)\r\n                    //     })\r\n\r\n\r\n                    return (\r\n                        <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                <img src={u.photos.small !== null ? u.photos.small : userPhoto}\r\n                                     className={s.userPhoto} alt={''}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed\r\n                                ?\r\n                                <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={onClickUnFollow}>unFollow</button>\r\n                                : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                          onClick={onClickFollow}>follow</button>}\r\n                        </div>\r\n                    </span>\r\n                            <span>\r\n                        <div>\r\n                            {u.name}\r\n                        </div>\r\n                        <div>\r\n                            {u.status}\r\n                        </div>\r\n                    </span>\r\n                            <span>\r\n                            <div>{'u.location.country'}</div>\r\n                            <div>{'u.location.city'}</div>\r\n                    </span>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/preloader.5665744c.svg\";","import preloader from '../../../assets/images/preloader.svg';\r\nimport React from 'react';\r\n\r\nexport function Preloader() {\r\n    return <>\r\n        <img src={preloader} alt={''}/>\r\n    </>\r\n}","import {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    getUsers,\r\n    setCurrentPage,\r\n    toggleIsFollowingProgress,\r\n    unfollow,\r\n    UsersType\r\n} from '../../redux/users-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport React, {ComponentType} from 'react';\r\nimport {Users} from './Users';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\ntype MapDispatchToPropsType = {\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: string) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n                toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleIsFollowingProgress,\r\n        getUsers,\r\n    }),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n","import React, {ChangeEvent} from 'react'\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nclass ProfileStatus extends React.Component<PropsType> {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: any) {\r\n        if (prevProps.status !== this.props.status)\r\n            this.setState({\r\n                status: this.state.status\r\n            })\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        })\r\n        this.props.updateUserStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    !this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || '@@@'}</span>\r\n                    </div>\r\n                }\r\n                {\r\n                    this.state.editMode &&\r\n                    <div>\r\n                        <input\r\n                            onBlur={this.deactivateEditMode}\r\n                            autoFocus\r\n                            value={this.state.status}\r\n                            onChange={this.onStatusChange}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus\r\n\r\n","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport {ProfileType} from '../../../redux/profile-reducer';\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nexport function ProfileInfo(props: PropsType) {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div>\r\n                <img\r\n                    src=\"https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300\"\r\n                    alt={''}/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img\r\n                    src={props.profile.photos.large} alt={''}/>\r\n                <ProfileStatus\r\n                    status={props.status}\r\n                    updateUserStatus={props.updateUserStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {v1} from 'uuid';\r\nimport {AppThunk} from './redux-store';\r\nimport {profileAPI} from '../api/api';\r\n\r\nexport const ADD_POST = 'ADD-POST'\r\nexport const SET_USER_PROFILE = 'SET-USER-PROFILE'\r\nexport const SET_STATUS = 'SET-STATUS'\r\n\r\nexport type AddPostActionType = ReturnType<typeof addPost>\r\nexport type SetUserProfileActionType = ReturnType<typeof setUserProfile>\r\nexport type SetStatusActionType = ReturnType<typeof setStatus>\r\n\r\nexport type ProfileActionsType =\r\n    AddPostActionType\r\n    | SetUserProfileActionType\r\n    | SetStatusActionType\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    contacts: {\r\n        facebook: string\r\n        website: string\r\n        vk: string\r\n        twitter: string\r\n        instagram: string\r\n        youtube: string\r\n        github: string\r\n        mainLink: string\r\n    }\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type InitialStateType = {\r\n    postsData: Array<PostType>\r\n    profile: ProfileType | null,\r\n    status: string,\r\n}\r\n\r\nconst initialState = {\r\n    postsData: [\r\n        {id: v1(), message: 'Hello', likesCount: 11},\r\n        {id: v1(), message: 'Buy', likesCount: 15},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n}\r\n\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                postsData: [\r\n                    ...state.postsData,\r\n                    {id: v1(), message: action.newPostText, likesCount: 0}\r\n                ],\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText: string) => ({type: ADD_POST, newPostText}) as const\r\nexport const setUserProfile = (profile: ProfileType) => ({type: SET_USER_PROFILE, profile}) as const\r\nexport const setStatus = (status: string) => ({type: SET_STATUS, status}) as const\r\n\r\n\r\nexport const getUserProfile = (userId: string): AppThunk => async dispatch => {\r\n    const data = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(data))\r\n}\r\n\r\nexport const getUserStatus = (userId: string): AppThunk => async dispatch => {\r\n    const data = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(data))\r\n}\r\n\r\nexport const updateUserStatus = (status: string): AppThunk => async dispatch => {\r\n    const data = await profileAPI.updateStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport default profileReducer","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport function Post(props: PropsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://shapka-youtube.ru/wp-content/uploads/2021/02/prikolnaya-avatarka-dlya-patsanov.jpg\" alt={''}/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Post} from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {MyPostsType} from './MyPostsContainer';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, requiredField} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/formsControls/FormsControls';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nexport function MyPosts(props: MyPostsType) {\r\n\r\n    const postsElements = props.postsData.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n\r\n    const onClickAddPost = (formData: FormDataType) => {\r\n        props.addPost(formData.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onClickAddPost}/>\r\n\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype FormDataType = {\r\n    newPostText: string\r\n}\r\n\r\nexport const AddPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder='enter text'\r\n                    name=\"newPostText\"\r\n                    component={Textarea}\r\n                    validate={[requiredField, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm<FormDataType>({form: 'addPostForm'})(AddPostForm)\r\n","import {addPost, PostType} from '../../../redux/profile-reducer';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\n\r\n\r\nexport type MapStateToPropsType = {\r\n    postsData: Array<PostType>\r\n}\r\n\r\nexport type MapDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nexport type MyPostsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n})(MyPosts)\r\n\r\n","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\r\nimport {ProfileType} from '../../redux/profile-reducer';\r\n\r\ntype PropsType= {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\nexport function Profile(props: PropsType) {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateUserStatus={props.updateUserStatus}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {ComponentType} from 'react'\r\nimport s from './Profile.module.css'\r\nimport {Profile} from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {getUserProfile, getUserStatus, ProfileType, updateUserStatus,} from '../../redux/profile-reducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n}\r\ntype MapDispatchToPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n    getUserStatus: (userId: string) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\nexport type ProfilePropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = '17214'\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.profile}>\r\n                <Profile\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateUserStatus={this.props.updateUserStatus}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n})\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","export default __webpack_public_path__ + \"static/media/Logo_header.8aaf41b6.png\";","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css'\r\nimport LogoForHeader from '../../assets/images/Logo_header.png';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nexport function Header(props: PropsType) {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src={LogoForHeader} alt={''}/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? props.login : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}","import {authAPI} from '../api/api';\r\nimport {AppThunk} from './redux-store';\r\n\r\nexport const SET_USER_DATA = 'SET-USER-DATA'\r\n\r\nexport type SetAuthUserDataActionType = ReturnType<typeof setAuthUserData>\r\nexport type AuthActionsType = SetAuthUserDataActionType\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId: number, email: string, login: string) => ({\r\n    type: SET_USER_DATA,\r\n    data: {userId, email, login}\r\n}) as const\r\n\r\n\r\nexport const getAuthUserData = (): AppThunk => async dispatch => {\r\n    const data = await authAPI.authMe()\r\n    if (data.resultCode === 0) {\r\n        let {id, email, login} = data.data\r\n        dispatch(setAuthUserData(id, email, login))\r\n    }\r\n}\r\n\r\n// export const login = (): ThunkType => {\r\n//\r\n//     return async (dispatch: Dispatch) => {\r\n//         await authAPI.login(email, password, rememberMe, captcha)\r\n//             .then(data => {\r\n//                 if (data.resultCode === 0) {\r\n//                     let {email, password, rememberMe, captcha} = data.data\r\n//                     dispatch(setAuthUserData(email, password, rememberMe, captcha))\r\n//                 }\r\n//             })\r\n//     }\r\n// }\r\n\r\n\r\nexport default authReducer","import React from 'react'\r\nimport {Header} from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {getAuthUserData, setAuthUserData} from '../../redux/auth-reducer';\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    setAuthUserData: (userId: number, email: string, login: string) => void\r\n    getAuthUserData: () => void\r\n}\r\n\r\nexport type HeaderPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getAuthUserData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData, getAuthUserData})(HeaderContainer)","import React from 'react'\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\n\r\n\r\nexport const Login = () => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        console.log(formData)\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype FormDataType = {\r\n    login: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Login'}\r\n                    name={'login'}\r\n                    component={'input'}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Password'}\r\n                    name={'password'}\r\n                    component={'input'}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    type=\"checkbox\"\r\n                    name={'rememberMe'}\r\n                    component={'input'}\r\n                /> remember me\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)","import React from 'react'\r\nimport s from './App.module.css'\r\nimport {Navbar} from './components/Navbar/Navbar'\r\nimport {News} from './components/News/News';\r\nimport {Music} from './components/Music/Music';\r\nimport {Settings} from './components/Settings/Settings';\r\nimport {Route} from 'react-router-dom'\r\nimport {DialogsContainer} from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport {Login} from './components/Login/Login';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.appWrapper}>\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className={s.appWrapperContent}>\r\n                <Route exact path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                <Route exact path=\"/dialogs\" render={() => <DialogsContainer/>}/>\r\n                <Route exact path=\"/users\" render={() => <UsersContainer/>}/>\r\n                <Route exact path=\"/news\" render={() => <News/>}/>\r\n                <Route exact path=\"/music\" render={() => <Music/>}/>\r\n                <Route exact path=\"/settings\" render={() => <Settings/>}/>\r\n                <Route exact path=\"/login\" render={() => <Login/>}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","export type SidebarActionsType = ReturnType<any>\r\nexport type SidebarPageType = {}\r\n\r\nconst initialState = {}\r\n\r\nconst sidebarReducer = (state: SidebarPageType = initialState, action: SidebarActionsType) => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport profileReducer, {ProfileActionsType} from './profile-reducer';\r\nimport dialogsReducer, {DialogsActionsType} from './dialogs-reducer';\r\nimport sidebarReducer, {SidebarActionsType} from './sidebar-reducer';\r\nimport usersReducer, {UsersActionsType} from './users-reducer';\r\nimport authReducer, {AuthActionsType} from './auth-reducer';\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppActionsType =\r\n    AuthActionsType\r\n    | DialogsActionsType\r\n    | ProfileActionsType\r\n    | SidebarActionsType\r\n    | UsersActionsType\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppStateType,\r\n    unknown,\r\n    AppActionsType>\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\n","import React from 'react'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './redux/redux-store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Dn8Z\",\"dialogsItem\":\"Dialogs_dialogsItem__1NNkN\",\"textarea\":\"Dialogs_textarea__2IKdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2Z8L4\",\"error\":\"FormsControls_error__BtpDs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__395W3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1upY6\",\"appWrapperContent\":\"App_appWrapperContent__1w-fS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__FOhNE\",\"activeLink\":\"DialogItem_activeLink__1OjsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__Sr8R7\",\"selectedPage\":\"Users_selectedPage__3gyJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__26XEX\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2MG0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1Sq30\",\"textarea\":\"MyPosts_textarea__1jrIv\",\"button\":\"MyPosts_button__3kRgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__tmv2U\",\"loginBlock\":\"Header_loginBlock__1H5dx\"};"],"sourceRoot":""}