(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
// Generated by LiveScript 1.3.0
(function(){
  var ret;
  ret = {
    id: 'dual-ring',
    type: 'spinner',
    name: "Dual Ring",
    desc: "Dual rings rotate with each other",
    tags: ['disqus', 'ring', 'donut', 'rotate'],
    slug: "dual-ring-loader",
    license: 'free',
    edit: {
      stroke: {
        name: "Stroke Color",
        type: 'color',
        'default': '#fe718d'
      },
      w: {
        name: "Stroke Width",
        type: 'number',
        'default': 8,
        min: 1
      },
      radius: {
        name: "Circle Radius",
        type: 'number',
        'default': 32,
        min: 1
      }
    },
    watch: function(n, o){
      return import$(this.local, {
        dasharray: n.radius * Math.PI / 2 + " " + n.radius * Math.PI / 2,
        r: n.radius + n.w * 0.5
      });
    },
    download: function(arg$){
      var type, ref$, cfg, lc, s, html, css;
      type = arg$.type;
      if (type !== 'css') {
        return;
      }
      ref$ = [this.config, this.local], cfg = ref$[0], lc = ref$[1];
      s = (ref$ = cfg.size / 100) > 1 ? ref$ : 1;
      html = "<div></div><div><div></div></div>";
      css = "@keyframes $id {\n  0% { transform: rotate(0) }\n  100% { transform: rotate(360deg) }\n}\n.$id div { box-sizing: border-box!important }\n.$id > div {\n  position: absolute;\n  width: " + lc.r * 2 * s + "px;\n  height: " + lc.r * 2 * s + "px;\n  top: " + (50 - lc.r) * s + "px;\n  left: " + (50 - lc.r) * s + "px;\n  border-radius: 50%;\n  border: " + cfg.w * s + "px solid #000;\n  border-color: " + cfg.stroke + " transparent " + cfg.stroke + " transparent;\n  animation: $id " + 1 / cfg.speed + "s linear infinite;\n}\n.$id > div:nth-child(2) { border-color: transparent }\n.$id > div:nth-child(2) div {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  transform: rotate(45deg);\n}\n.$id > div:nth-child(2) div:before, .$id > div:nth-child(2) div:after { \n  content: \"\";\n  display: block;\n  position: absolute;\n  width: " + cfg.w * s + "px;\n  height: " + cfg.w * s + "px;\n  top: " + -s * cfg.w + "px;\n  left: " + s * ((lc.r - cfg.w) - cfg.w / 2) + "px;\n  background: " + cfg.stroke + ";\n  border-radius: 50%;\n  box-shadow: 0 " + s * (lc.r * 2 - cfg.w) + "px 0 0 " + cfg.stroke + ";\n}\n.$id > div:nth-child(2) div:after { \n  left: " + -s * cfg.w + "px;\n  top: " + s * ((lc.r - cfg.w) - cfg.w / 2) + "px;\n  box-shadow: " + s * (lc.r * 2 - cfg.w * 1) + "px 0 0 0 " + cfg.stroke + ";\n}";
      return {
        html: html,
        css: css
      };
    },
    dom: function(config){
      var lc;
      lc = this.local;
      return "<circle cx=\"50\" cy=\"50\" r=\"" + config.radius + "\" stroke-width=\"" + config.w + "\"\nstroke=\"" + config.stroke + "\" stroke-dasharray=\"" + lc.dasharray + "\" fill=\"none\" stroke-linecap=\"round\">\n  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\"\n  dur=\"" + 1 / config.speed + "s\" keyTimes=\"0;1\" values=\"0 50 50;360 50 50\"/>\n</circle>";
    }
  };
  if (typeof module != 'undefined' && module !== null) {
    module.exports = ret;
  }
  if (typeof ModManager != 'undefined' && ModManager !== null) {
    ModManager.register(ret);
  }
  return ret;
})();
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}
},{}]},{},[1]);
