(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
// Generated by LiveScript 1.3.0
(function(){
  var ret;
  ret = {
    id: 'rolling',
    type: 'spinner',
    name: 'Rolling',
    desc: "simple, lightweight generic loading indicator",
    tags: ['bar', 'circle', 'curve', 'round', 'rotate'],
    slug: "curve-bars-loading-indicator",
    license: 'free',
    edit: {
      color: {
        name: 'Color',
        type: 'color',
        'default': '#e15b64'
      },
      w: {
        name: "Stroke Width",
        type: 'number',
        'default': 10
      },
      radius: {
        name: "Radius",
        type: 'number',
        'default': 35
      }
    },
    watch: function(n, o){
      var len;
      len = Math.PI * +n.radius;
      return this.local.dasharray = 1.5 * len + " " + (0.5 * len + 2);
    },
    download: function(arg$){
      var type, ref$, cfg, lc, s, html, css;
      type = arg$.type;
      if (type !== 'css') {
        return;
      }
      ref$ = [this.config, this.local], cfg = ref$[0], lc = ref$[1];
      s = (ref$ = cfg.size / 100) > 1 ? ref$ : 1;
      html = "<div></div>";
      css = "@keyframes $id {\n  0% { transform: translate(-50%,-50%) rotate(0deg); }\n  100% { transform: translate(-50%,-50%) rotate(360deg); }\n}\n.$id div {\n  position: absolute;\n  width: " + s * (cfg.radius * 2 - cfg.w) + "px;\n  height: " + s * (cfg.radius * 2 - cfg.w) + "px;\n  border: " + s * cfg.w + "px solid " + cfg.color + ";\n  border-top-color: transparent;\n  border-radius: 50%;\n}\n.$id div {\n  animation: $id " + 1 / cfg.speed + "s linear infinite;\n  top: " + 50 * s + "px;\n  left: " + 50 * s + "px\n}";
      return {
        html: html,
        css: css
      };
    },
    dom: function(cfg){
      var lc;
      lc = this.local;
      return "<circle cx=\"50\" cy=\"50\" fill=\"none\" stroke=\"" + cfg.color + "\" stroke-width=\"" + cfg.w + "\"\nr=\"" + cfg.radius + "\" stroke-dasharray=\"" + lc.dasharray + "\">\n  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" dur=\"" + 1 / cfg.speed + "s\"\n  values=\"0 50 50;360 50 50\" keyTimes=\"0;1\"/>\n</circle>";
    }
  };
  if (typeof module != 'undefined' && module !== null) {
    module.exports = ret;
  }
  if (typeof ModManager != 'undefined' && ModManager !== null) {
    ModManager.register(ret);
  }
  return ret;
})();
},{}]},{},[1]);
