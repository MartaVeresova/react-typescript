(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
// Generated by LiveScript 1.3.0
(function(){
  var ret;
  ret = {
    id: 'reload',
    type: 'spinner',
    name: 'Reload',
    desc: "best for showing user that you are now reloading",
    tags: ['reload', 'sync', 'ajax', 'get', 'fetch'],
    slug: "ajax-syncing-loading-icon",
    license: 'free',
    edit: {
      color: {
        name: "Color",
        type: 'color',
        'default': '#e15b64'
      },
      w: {
        name: "Stroke Width",
        type: 'number',
        'default': 12
      },
      arrowWidth: {
        name: "Arrow Size",
        type: 'number',
        'default': 12
      },
      ringRadius: {
        name: "Ring Radius",
        type: 'number',
        'default': 35,
        min: 1,
        max: 50
      },
      ringLength: {
        name: "Ring Length",
        type: 'number',
        'default': 0.5,
        min: 0,
        max: 0.99,
        step: 0.01
      }
    },
    watch: function(n, o){
      var rs, lc;
      rs = n.ringRadius;
      lc = this.local;
      lc.arrowHeight = n.arrowWidth;
      lc.darrow = ["M49 " + ((50 - rs) - n.arrowWidth), "L49 " + ((50 - rs) + n.arrowWidth), "L" + (49 + +lc.arrowHeight) + " " + (50 - rs), "L49 " + ((50 - rs) - n.arrowWidth)].join('');
      lc.ay = -n.arrowWidth + n.w / 2;
      lc.ax = -n.arrowWidth;
      return lc.ax = lc.ay = 1 + (rs * 2 - n.w) - n.arrowWidth * 2 - rs * 2 / Math.sqrt(2);
    },
    download: function(arg$){
      var type, ref$, cfg, lc, s, rs, html, css;
      type = arg$.type;
      if (type !== 'css') {
        return;
      }
      ref$ = [this.config, this.local], cfg = ref$[0], lc = ref$[1];
      s = (ref$ = cfg.size / 100) > 1 ? ref$ : 1;
      rs = cfg.ringRadius;
      html = "<div><div></div><div></div><div></div></div>";
      css = "@keyframes $id { 0% { transform: rotate(0) } 100% { transform: rotate(360deg); } }\n.$id > div {\n  animation: $id 1s infinite linear;\n  transform-origin: " + 50 * s + "px " + 50 * s + "px;\n}\n.$id > div div { position: absolute; }\n.$id > div div:nth-child(1), .$id > div div:nth-child(2) {\n  width: " + (rs * 2 + cfg.w) * s + "px;\n  height: " + (rs * 2 + cfg.w) * s + "px;\n  border: " + cfg.w * s + "px solid;\n  border-radius: 50%;\n  border-color: transparent " + cfg.color + " " + cfg.color + " " + cfg.color + ";\n  box-sizing: border-box;\n  position: absolute;\n  transform: rotate(45deg);\n  transform-origin: " + 50 * s + "px " + 50 * s + "px;\n}\n.$id > div div:nth-child(1) {\n  transform: rotate(45deg) translate(" + ((50 - rs) - cfg.w / 2) * s + "px, " + ((50 - rs) - cfg.w / 2) * s + "px);\n}\n.$id > div div:nth-child(2) {\n  transform: rotate(" + (45 - 90 * cfg.ringLength) + "deg) translate(" + ((50 - rs) - cfg.w / 2) * s + "px, " + ((50 - rs) - cfg.w / 2) * s + "px);;\n}\n.$id > div div:nth-child(3) {\n  width: 0;\n  height: 0;\n  border: " + s * cfg.arrowWidth + "px solid;\n  border-color: transparent transparent transparent " + cfg.color + ";\n  transform: translate(" + 50 * s + "px, " + s * ((50 - rs) - cfg.w / 2 - cfg.arrowWidth / 2) + "px);\n}";
      return {
        html: html,
        css: css
      };
    },
    dom: function(cfg){
      var lc, rs, x, y;
      lc = this.local;
      rs = cfg.ringRadius;
      x = 50 - Math.sin((6 + 2 * cfg.ringLength) * Math.PI / 4) * rs;
      y = 50 - Math.cos((6 + 2 * cfg.ringLength) * Math.PI / 4) * rs;
      return "<g>\n  <path d=\"M50 " + (50 - rs) + "A" + rs + " " + rs + " 0 1 0 " + x + " " + y + "\" fill=\"none\" stroke=\"" + cfg.color + "\" stroke-width=\"" + cfg.w + "\"/>\n  <path d=\"" + lc.darrow + "\" fill=\"" + cfg.color + "\"/>\n  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" dur=\"" + 1 / cfg.speed + "s\"\n  values=\"0 50 50;360 50 50\" keyTimes=\"0;1\"/>\n</g>";
    }
  };
  if (typeof module != 'undefined' && module !== null) {
    module.exports = ret;
  }
  if (typeof ModManager != 'undefined' && ModManager !== null) {
    ModManager.register(ret);
  }
  return ret;
})();
},{}]},{},[1]);
