(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
// Generated by LiveScript 1.3.0
(function(){
  var ret;
  ret = {
    id: 'ripple',
    type: 'spinner',
    name: 'Ripple',
    desc: "ripple / radio / broadcast style loader",
    tags: ['ripple', 'circle', 'scale', 'round', 'radar', 'radio'],
    slug: "ripple-radio-preloader",
    license: 'free',
    edit: {
      c1: {
        name: "Color 1",
        type: 'color',
        'default': '#e90c59',
        priority: 1.1
      },
      c2: {
        name: "Color 2",
        type: 'color',
        'default': '#46dff0',
        priority: 1.2
      },
      w: {
        name: "Stroke width",
        type: 'number',
        'default': 2,
        priority: 1.3,
        min: 1,
        max: 100
      },
      radius: {
        name: 'Radius',
        type: 'number',
        'default': 40,
        priority: 1.4
      },
      byPalette: {
        name: "Ring from Palette",
        type: 'boolean',
        'default': false,
        priority: 3.1
      },
      invert: {
        name: "invert direction",
        type: 'boolean',
        'default': false,
        priority: 3.2
      }
    },
    watch: function(n, o){
      var ref$;
      return ref$ = this.local, ref$.delay = -0.5 / n.speed, ref$;
    },
    download: function(arg$){
      var type, ref$, cfg, lc, s, cs, html, css;
      type = arg$.type;
      if (type !== 'css') {
        return;
      }
      ref$ = [this.config, this.local], cfg = ref$[0], lc = ref$[1];
      s = (ref$ = cfg.size / 100) > 1 ? ref$ : 1;
      if (cfg.byPalette) {
        cs = cfg.palette.colors;
      } else {
        cs = [cfg.c1, cfg.c2];
      }
      html = repeatString$("<div></div>", cs.length);
      css = "";
      if (cfg.invert) {
        css += "@keyframes $id {\n  0% {\n    top: " + s * (50 - cfg.radius - cfg.w / 2) + "px;\n    left: " + s * (50 - cfg.radius - cfg.w / 2) + "px;\n    width: " + s * (cfg.radius * 2 - cfg.w) + "px;\n    height: " + s * (cfg.radius * 2 - cfg.w) + "px;\n    opacity: 0\n  }\n  10% {\n    opacity: 1;\n  }\n  100% {\n    top: " + s * (50 - cfg.w) + "px;\n    left: " + s * (50 - cfg.w) + "px;\n    width: 0;\n    height: 0;\n    opacity: 0;\n  }\n}";
      } else {
        css += "@keyframes $id {\n  0% {\n    top: " + s * (50 - cfg.w) + "px;\n    left: " + s * (50 - cfg.w) + "px;\n    width: 0;\n    height: 0;\n    opacity: 1;\n  }\n  100% {\n    top: " + s * (50 - cfg.radius - cfg.w / 2) + "px;\n    left: " + s * (50 - cfg.radius - cfg.w / 2) + "px;\n    width: " + s * (cfg.radius * 2 - cfg.w) + "px;\n    height: " + s * (cfg.radius * 2 - cfg.w) + "px;\n    opacity: 0;\n  }\n}";
      }
      css += ".$id div {\n  position: absolute;\n  border-width: " + s * cfg.w + "px;\n  border-style: solid;\n  opacity: 1;\n  border-radius: 50%;\n  animation: $id " + 1 / cfg.speed + "s cubic-bezier(0,0.2,0.8,1) infinite;\n}";
      css += cs.map(function(d, i){
        var delay;
        d = ldColor.web(d);
        delay = (-i / cs.length) / cfg.speed;
        return ".$id div:nth-child(" + (i + 1) + ") {\n  border-color: " + d + ";\n  animation-delay: " + delay + "s;\n}";
      }).join('\n');
      return {
        html: html,
        css: css
      };
    },
    dom: function(cfg){
      var lc, cs, ret;
      lc = this.local;
      if (cfg.byPalette) {
        cs = cfg.palette.colors;
      } else {
        cs = [cfg.c1, cfg.c2];
      }
      ret = cs.map(function(d, i){
        var delay, dir, opacity;
        delay = -(i / cs.length) / cfg.speed;
        dir = cfg.invert
          ? cfg.radius + ";0"
          : "0;" + cfg.radius;
        d = ldColor.web(d);
        opacity = cfg.invert
          ? "<animate attributeName=\"opacity\" repeatCount=\"indefinite\" dur=\"" + 1 / cfg.speed + "s\"\nvalues=\"0;1;0\" keyTimes=\"0;0.1;1\" keySplines=\"0.2 0 0.8 1;0.2 0 0.8 1\" calcMode=\"spline\" begin=\"" + delay + "s\"/>"
          : "<animate attributeName=\"opacity\" repeatCount=\"indefinite\" dur=\"" + 1 / cfg.speed + "s\"\nvalues=\"1;0\" keyTimes=\"0;1\" keySplines=\"0.2 0 0.8 1\" calcMode=\"spline\" begin=\"" + delay + "s\"/>";
        return "<circle cx=\"50\" cy=\"50\" r=\"0\" fill=\"none\" stroke=\"" + d + "\" stroke-width=\"" + cfg.w + "\">\n  <animate attributeName=\"r\" repeatCount=\"indefinite\" dur=\"" + 1 / cfg.speed + "s\"\n  values=\"" + dir + "\" keyTimes=\"0;1\" keySplines=\"0 0.2 0.8 1\" calcMode=\"spline\" begin=\"" + delay + "s\"/>\n  " + opacity + "\n</circle>";
      });
      return ret.join('');
    }
  };
  if (typeof module != 'undefined' && module !== null) {
    module.exports = ret;
  }
  if (typeof ModManager != 'undefined' && ModManager !== null) {
    ModManager.register(ret);
  }
  return ret;
})();
function repeatString$(str, n){
  for (var r = ''; n > 0; (n >>= 1) && (str += str)) if (n & 1) r += str;
  return r;
}
},{}]},{},[1]);
